"use strict";(self.webpackChunkdocusaurus_template_openapi_docs=self.webpackChunkdocusaurus_template_openapi_docs||[]).push([[5767],{28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var r=i(96540);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}},61576:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"distributions/configuration","title":"Configuration Reference","description":"Complete guide to configuring Llama Stack runtime with YAML files","source":"@site/docs/distributions/configuration.mdx","sourceDirName":"distributions","slug":"/distributions/configuration","permalink":"/llama-stack/docs/distributions/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-llama/llama-stack/tree/main/docs/docs/distributions/configuration.mdx","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Configuration Reference","description":"Complete guide to configuring Llama Stack runtime with YAML files","sidebar_label":"Configuration Reference","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Importing as Library","permalink":"/llama-stack/docs/distributions/importing-as-library"},"next":{"title":"Starting Llama Stack Server","permalink":"/llama-stack/docs/distributions/starting-llama-stack-server"}}');var s=i(74848),t=i(28453);i(64911),i(79329);const a={title:"Configuration Reference",description:"Complete guide to configuring Llama Stack runtime with YAML files",sidebar_label:"Configuration Reference",sidebar_position:6},o='Configuring a "Stack"',l={},c=[{value:"Providers",id:"providers",level:2},{value:"Environment Variable Substitution",id:"environment-variable-substitution",level:3},{value:"Basic Syntax",id:"basic-syntax",level:4},{value:"Default Values",id:"default-values",level:4},{value:"Conditional Values",id:"conditional-values",level:4},{value:"Examples",id:"examples",level:4},{value:"Runtime Override",id:"runtime-override",level:4},{value:"Type Safety",id:"type-safety",level:4},{value:"Resources",id:"resources",level:2},{value:"Server Configuration",id:"server-configuration",level:2},{value:"CORS Configuration",id:"cors-configuration",level:3},{value:"Authentication Configuration",id:"authentication-configuration",level:3},{value:"OAuth 2.0/OpenID Connect Provider with Kubernetes",id:"oauth-20openid-connect-provider-with-kubernetes",level:4},{value:"Kubernetes Authentication Provider",id:"kubernetes-authentication-provider",level:4},{value:"GitHub Token Provider",id:"github-token-provider",level:4},{value:"Custom Provider",id:"custom-provider",level:4},{value:"Access Control",id:"access-control",level:3},{value:"Examples",id:"examples-1",level:4},{value:"API Endpoint Authorization with Scopes",id:"api-endpoint-authorization-with-scopes",level:4},{value:"Quota Configuration",id:"quota-configuration",level:3},{value:"Example",id:"example",level:4},{value:"Configuration Options",id:"configuration-options",level:4},{value:"Example with Authentication Enabled",id:"example-with-authentication-enabled",level:4},{value:"CORS Configuration",id:"cors-configuration-1",level:3},{value:"Quick Setup",id:"quick-setup",level:4},{value:"Custom Configuration",id:"custom-configuration",level:4},{value:"Configuration Options",id:"configuration-options-1",level:4},{value:"Extending to handle Safety",id:"extending-to-handle-safety",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"configuring-a-stack",children:'Configuring a "Stack"'})}),"\n",(0,s.jsx)(n.p,{children:"The Llama Stack runtime configuration is specified as a YAML file. Here is a simplified version of an example configuration file for the Ollama distribution:"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["The default ",(0,s.jsx)(n.code,{children:"run.yaml"})," files generated by templates are starting points for your configuration. For guidance on customizing these files for your specific needs, see ",(0,s.jsx)(n.a,{href:"./customizing-run-yaml",children:"Customizing Your run.yaml Configuration"}),"."]})}),"\n",(0,s.jsxs)(i,{children:[(0,s.jsx)("summary",{children:"\ud83d\udc4b Click here for a Sample Configuration File"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'version: 2\napis:\n- agents\n- inference\n- vector_io\n- safety\n- telemetry\nproviders:\n  inference:\n  - provider_id: ollama\n    provider_type: remote::ollama\n    config:\n      url: ${env.OLLAMA_URL:=http://localhost:11434}\n  vector_io:\n  - provider_id: faiss\n    provider_type: inline::faiss\n    config:\n      kvstore:\n        type: sqlite\n        namespace: null\n        db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/ollama}/faiss_store.db\n  safety:\n  - provider_id: llama-guard\n    provider_type: inline::llama-guard\n    config: {}\n  agents:\n  - provider_id: meta-reference\n    provider_type: inline::meta-reference\n    config:\n      persistence_store:\n        type: sqlite\n        namespace: null\n        db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/ollama}/agents_store.db\n  telemetry:\n  - provider_id: meta-reference\n    provider_type: inline::meta-reference\n    config: {}\nmetadata_store:\n  namespace: null\n  type: sqlite\n  db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/ollama}/registry.db\nmodels:\n- metadata: {}\n  model_id: ${env.INFERENCE_MODEL}\n  provider_id: ollama\n  provider_model_id: null\nshields: []\nserver:\n  port: 8321\n  auth:\n    provider_config:\n      type: "oauth2_token"\n      jwks:\n        uri: "https://my-token-issuing-svc.com/jwks"\n'})})]}),"\n",(0,s.jsx)(n.p,{children:"Let's break this down into the different sections. The first section specifies the set of APIs that the stack server will serve:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apis:\n- agents\n- inference\n- vector_io\n- safety\n- telemetry\n"})}),"\n",(0,s.jsx)(n.h2,{id:"providers",children:"Providers"}),"\n",(0,s.jsxs)(n.p,{children:["Next up is the most critical part: the set of providers that the stack will use to serve the above APIs. Consider the ",(0,s.jsx)(n.code,{children:"inference"})," API:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"providers:\n  inference:\n    # provider_id is a string you can choose freely\n  - provider_id: ollama\n    # provider_type is a string that specifies the type of provider.\n    # in this case, the provider for inference is ollama and it runs remotely (outside of the distribution)\n    provider_type: remote::ollama\n    # config is a dictionary that contains the configuration for the provider.\n    # in this case, the configuration is the url of the ollama server\n    config:\n      url: ${env.OLLAMA_URL:=http://localhost:11434}\n"})}),"\n",(0,s.jsx)(n.p,{children:"A few things to note:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.em,{children:"provider instance"})," is identified with an (id, type, config) triplet."]}),"\n",(0,s.jsx)(n.li,{children:"The id is a string you can choose freely."}),"\n",(0,s.jsx)(n.li,{children:"You can instantiate any number of provider instances of the same type."}),"\n",(0,s.jsx)(n.li,{children:"The configuration dictionary is provider-specific."}),"\n",(0,s.jsxs)(n.li,{children:["Notice that configuration can reference environment variables (with default values), which are expanded at runtime. When you run a stack server (via docker or via ",(0,s.jsx)(n.code,{children:"llama stack run"}),"), you can specify ",(0,s.jsx)(n.code,{children:"--env OLLAMA_URL=http://my-server:11434"})," to override the default value."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"environment-variable-substitution",children:"Environment Variable Substitution"}),"\n",(0,s.jsxs)(n.p,{children:["Llama Stack supports environment variable substitution in configuration values using the\n",(0,s.jsx)(n.code,{children:"${env.VARIABLE_NAME}"})," syntax. This allows you to externalize configuration values and provide\ndifferent settings for different environments. The syntax is inspired by ",(0,s.jsx)(n.a,{href:"https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html",children:"bash parameter expansion"}),"\nand follows similar patterns."]}),"\n",(0,s.jsx)(n.h4,{id:"basic-syntax",children:"Basic Syntax"}),"\n",(0,s.jsx)(n.p,{children:"The basic syntax for environment variable substitution is:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"config:\n  api_key: ${env.API_KEY}\n  url: ${env.SERVICE_URL}\n"})}),"\n",(0,s.jsx)(n.p,{children:"If the environment variable is not set, the server will raise an error during startup."}),"\n",(0,s.jsx)(n.h4,{id:"default-values",children:"Default Values"}),"\n",(0,s.jsxs)(n.p,{children:["You can provide default values using the ",(0,s.jsx)(n.code,{children:":="})," operator:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"config:\n  url: ${env.OLLAMA_URL:=http://localhost:11434}\n  port: ${env.PORT:=8321}\n  timeout: ${env.TIMEOUT:=60}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If the environment variable is not set, the default value ",(0,s.jsx)(n.code,{children:"http://localhost:11434"})," will be used.\nEmpty defaults are allowed so ",(0,s.jsx)(n.code,{children:"url: ${env.OLLAMA_URL:=}"})," will be set to ",(0,s.jsx)(n.code,{children:"None"})," if the environment variable is not set."]}),"\n",(0,s.jsx)(n.h4,{id:"conditional-values",children:"Conditional Values"}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:":+"})," operator to provide a value only when the environment variable is set:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"config:\n  # Only include this field if ENVIRONMENT is set\n  environment: ${env.ENVIRONMENT:+production}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If the environment variable is set, the value after ",(0,s.jsx)(n.code,{children:":+"})," will be used. If it's not set, the field\nwill be omitted with a ",(0,s.jsx)(n.code,{children:"None"})," value."]}),"\n",(0,s.jsxs)(n.p,{children:["Do not use conditional values (",(0,s.jsx)(n.code,{children:"${env.OLLAMA_URL:+}"}),") for empty defaults (",(0,s.jsx)(n.code,{children:"${env.OLLAMA_URL:=}"}),").\nThis will be set to ",(0,s.jsx)(n.code,{children:"None"})," if the environment variable is not set.\nConditional must only be used when the environment variable is set."]}),"\n",(0,s.jsx)(n.h4,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.p,{children:"Here are some common patterns:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# Required environment variable (will error if not set)\napi_key: ${env.OPENAI_API_KEY}\n\n# Optional with default\nbase_url: ${env.API_BASE_URL:=https://api.openai.com/v1}\n\n# Conditional field\ndebug_mode: ${env.DEBUG:+true}\n\n# Optional field that becomes None if not set\noptional_token: ${env.OPTIONAL_TOKEN:+}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"runtime-override",children:"Runtime Override"}),"\n",(0,s.jsx)(n.p,{children:"You can override environment variables at runtime when starting the server:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Override specific environment variables\nllama stack run --config run.yaml --env API_KEY=sk-123 --env BASE_URL=https://custom-api.com\n\n# Or set them in your shell\nexport API_KEY=sk-123\nexport BASE_URL=https://custom-api.com\nllama stack run --config run.yaml\n"})}),"\n",(0,s.jsx)(n.h4,{id:"type-safety",children:"Type Safety"}),"\n",(0,s.jsx)(n.p,{children:"The environment variable substitution system is type-safe:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"String values remain strings"}),"\n",(0,s.jsxs)(n.li,{children:["Empty defaults (",(0,s.jsx)(n.code,{children:"${env.VAR:+}"}),") are converted to ",(0,s.jsx)(n.code,{children:"None"})," for fields that accept ",(0,s.jsx)(n.code,{children:"str | None"})]}),"\n",(0,s.jsxs)(n.li,{children:["Numeric defaults are properly typed (e.g., ",(0,s.jsx)(n.code,{children:"${env.PORT:=8321}"})," becomes an integer)"]}),"\n",(0,s.jsxs)(n.li,{children:["Boolean defaults work correctly (e.g., ",(0,s.jsx)(n.code,{children:"${env.DEBUG:=false}"})," becomes a boolean)"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,s.jsxs)(n.p,{children:["Let's look at the ",(0,s.jsx)(n.code,{children:"models"})," section:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"models:\n- metadata: {}\n  model_id: ${env.INFERENCE_MODEL}\n  provider_id: ollama\n  provider_model_id: null\n  model_type: llm\n"})}),"\n",(0,s.jsxs)(n.p,{children:['A Model is an instance of a "Resource" (see ',(0,s.jsx)(n.a,{href:"/docs/concepts/",children:"Concepts"}),") and is associated with a specific inference provider (in this case, the provider with identifier ",(0,s.jsx)(n.code,{children:"ollama"}),'). This is an instance of a "pre-registered" model. While we always encourage the clients to register models before using them, some Stack servers may come up a list of "already known and available" models.']}),"\n",(0,s.jsxs)(n.p,{children:["What's with the ",(0,s.jsx)(n.code,{children:"provider_model_id"})," field? This is an identifier for the model inside the provider's model catalog. Contrast it with ",(0,s.jsx)(n.code,{children:"model_id"})," which is the identifier for the same model for Llama Stack's purposes. For example, you may want to name \"llama3.2",":vision-11b",'" as "image_captioning_model" when you use it in your Stack interactions. When omitted, the server will set ',(0,s.jsx)(n.code,{children:"provider_model_id"})," to be the same as ",(0,s.jsx)(n.code,{children:"model_id"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If you need to conditionally register a model in the configuration, such as only when specific environment variable(s) are set, this can be accomplished by utilizing a special ",(0,s.jsx)(n.code,{children:"__disabled__"})," string as the default value of an environment variable substitution, as shown below:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"models:\n- metadata: {}\n  model_id: ${env.INFERENCE_MODEL:__disabled__}\n  provider_id: ollama\n  provider_model_id: ${env.INFERENCE_MODEL:__disabled__}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The snippet above will only register this model if the environment variable ",(0,s.jsx)(n.code,{children:"INFERENCE_MODEL"})," is set and non-empty. If the environment variable is not set, the model will not get registered at all."]}),"\n",(0,s.jsx)(n.h2,{id:"server-configuration",children:"Server Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"server"})," section configures the HTTP server that serves the Llama Stack APIs:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'server:\n  port: 8321  # Port to listen on (default: 8321)\n  tls_certfile: "/path/to/cert.pem"  # Optional: Path to TLS certificate for HTTPS\n  tls_keyfile: "/path/to/key.pem"    # Optional: Path to TLS key for HTTPS\n  cors: true  # Optional: Enable CORS (dev mode) or full config object\n'})}),"\n",(0,s.jsx)(n.h3,{id:"cors-configuration",children:"CORS Configuration"}),"\n",(0,s.jsx)(n.p,{children:"CORS (Cross-Origin Resource Sharing) can be configured in two ways:"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Local development"})," (allows localhost origins only):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"server:\n  cors: true\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Explicit configuration"})," (custom origins and settings):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'server:\n  cors:\n    allow_origins: ["https://myapp.com", "https://app.example.com"]\n    allow_methods: ["GET", "POST", "PUT", "DELETE"]\n    allow_headers: ["Content-Type", "Authorization"]\n    allow_credentials: true\n    max_age: 3600\n'})}),"\n",(0,s.jsxs)(n.p,{children:["When ",(0,s.jsx)(n.code,{children:"cors: true"}),", the server enables secure localhost-only access for local development. For production, specify exact origins to maintain security."]}),"\n",(0,s.jsx)(n.h3,{id:"authentication-configuration",children:"Authentication Configuration"}),"\n",(0,s.jsx)(n.admonition,{title:"Breaking Change (v0.2.14)",type:"info",children:(0,s.jsxs)(n.p,{children:["The authentication configuration structure has changed. The previous format with ",(0,s.jsx)(n.code,{children:"provider_type"})," and ",(0,s.jsx)(n.code,{children:"config"})," fields has been replaced with a unified ",(0,s.jsx)(n.code,{children:"provider_config"})," field that includes the ",(0,s.jsx)(n.code,{children:"type"})," field. Update your configuration files accordingly."]})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"auth"})," section configures authentication for the server. When configured, all API requests must include a valid Bearer token in the Authorization header:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Authorization: Bearer <token>\n"})}),"\n",(0,s.jsx)(n.p,{children:"The server supports multiple authentication providers:"}),"\n",(0,s.jsx)(n.h4,{id:"oauth-20openid-connect-provider-with-kubernetes",children:"OAuth 2.0/OpenID Connect Provider with Kubernetes"}),"\n",(0,s.jsx)(n.p,{children:"The server can be configured to use service account tokens for authorization, validating these against the Kubernetes API server, e.g.:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'server:\n  auth:\n    provider_config:\n      type: "oauth2_token"\n      jwks:\n        uri: "https://kubernetes.default.svc:8443/openid/v1/jwks"\n        token: "${env.TOKEN:+}"\n        key_recheck_period: 3600\n      tls_cafile: "/path/to/ca.crt"\n      issuer: "https://kubernetes.default.svc"\n      audience: "https://kubernetes.default.svc"\n'})}),"\n",(0,s.jsx)(n.p,{children:"To find your cluster's jwks uri (from which the public key(s) to verify the token signature are obtained), run:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl get --raw /.well-known/openid-configuration| jq -r .jwks_uri\n"})}),"\n",(0,s.jsx)(n.p,{children:"For the tls_cafile, you can use the CA certificate of the OIDC provider:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl config view --minify -o jsonpath='{.clusters[0].cluster.certificate-authority}'\n"})}),"\n",(0,s.jsx)(n.p,{children:"For the issuer, you can use the OIDC provider's URL:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl get --raw /.well-known/openid-configuration| jq .issuer\n"})}),"\n",(0,s.jsx)(n.p,{children:"The audience can be obtained from a token, e.g. run:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl create token default --duration=1h | cut -d. -f2 | base64 -d | jq .aud\n"})}),"\n",(0,s.jsx)(n.p,{children:"The jwks token is used to authorize access to the jwks endpoint. You can obtain a token by running:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl create namespace llama-stack\nkubectl create serviceaccount llama-stack-auth -n llama-stack\nkubectl create token llama-stack-auth -n llama-stack > llama-stack-auth-token\nexport TOKEN=$(cat llama-stack-auth-token)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Alternatively, you can configure the jwks endpoint to allow anonymous access. To do this, make sure\nthe ",(0,s.jsx)(n.code,{children:"kube-apiserver"})," runs with ",(0,s.jsx)(n.code,{children:"--anonymous-auth=true"})," to allow unauthenticated requests\nand that the correct RoleBinding is created to allow the service account to access the necessary\nresources. If that is not the case, you can create a RoleBinding for the service account to access\nthe necessary resources:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# allow-anonymous-openid.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: allow-anonymous-openid\nrules:\n- nonResourceURLs: ["/openid/v1/jwks"]\n  verbs: ["get"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: allow-anonymous-openid\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: allow-anonymous-openid\nsubjects:\n- kind: User\n  name: system:anonymous\n  apiGroup: rbac.authorization.k8s.io\n'})}),"\n",(0,s.jsx)(n.p,{children:"And then apply the configuration:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f allow-anonymous-openid.yaml\n"})}),"\n",(0,s.jsx)(n.p,{children:"The provider extracts user information from the JWT token:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Username from the ",(0,s.jsx)(n.code,{children:"sub"})," claim becomes a role"]}),"\n",(0,s.jsx)(n.li,{children:"Kubernetes groups become teams"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"You can easily validate a request by running:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -s -L -H "Authorization: Bearer $(cat llama-stack-auth-token)" http://127.0.0.1:8321/v1/providers\n'})}),"\n",(0,s.jsx)(n.h4,{id:"kubernetes-authentication-provider",children:"Kubernetes Authentication Provider"}),"\n",(0,s.jsx)(n.p,{children:"The server can be configured to use Kubernetes SelfSubjectReview API to validate tokens directly against the Kubernetes API server:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'server:\n  auth:\n    provider_config:\n      type: "kubernetes"\n      api_server_url: "https://kubernetes.default.svc"\n      claims_mapping:\n        username: "roles"\n        groups: "roles"\n        uid: "uid_attr"\n      verify_tls: true\n      tls_cafile: "/path/to/ca.crt"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Configuration options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"api_server_url"}),": The Kubernetes API server URL (e.g., ",(0,s.jsx)(n.a,{href:"https://kubernetes.default.svc:6443",children:"https://kubernetes.default.svc:6443"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"verify_tls"}),": Whether to verify TLS certificates (default: true)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"tls_cafile"}),": Path to CA certificate file for TLS verification"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"claims_mapping"}),": Mapping of Kubernetes user claims to access attributes"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The provider validates tokens by sending a SelfSubjectReview request to the Kubernetes API server at ",(0,s.jsx)(n.code,{children:"/apis/authentication.k8s.io/v1/selfsubjectreviews"}),". The provider extracts user information from the response:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Username from the ",(0,s.jsx)(n.code,{children:"userInfo.username"})," field"]}),"\n",(0,s.jsxs)(n.li,{children:["Groups from the ",(0,s.jsx)(n.code,{children:"userInfo.groups"})," field"]}),"\n",(0,s.jsxs)(n.li,{children:["UID from the ",(0,s.jsx)(n.code,{children:"userInfo.uid"})," field"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"To obtain a token for testing:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl create namespace llama-stack\nkubectl create serviceaccount llama-stack-auth -n llama-stack\nkubectl create token llama-stack-auth -n llama-stack > llama-stack-auth-token\n"})}),"\n",(0,s.jsx)(n.p,{children:"You can validate a request by running:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -s -L -H "Authorization: Bearer $(cat llama-stack-auth-token)" http://127.0.0.1:8321/v1/providers\n'})}),"\n",(0,s.jsx)(n.h4,{id:"github-token-provider",children:"GitHub Token Provider"}),"\n",(0,s.jsx)(n.p,{children:"Validates GitHub personal access tokens or OAuth tokens directly:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'server:\n  auth:\n    provider_config:\n      type: "github_token"\n      github_api_base_url: "https://api.github.com"  # Or GitHub Enterprise URL\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The provider fetches user information from GitHub and maps it to access attributes based on the ",(0,s.jsx)(n.code,{children:"claims_mapping"})," configuration."]}),"\n",(0,s.jsx)(n.h4,{id:"custom-provider",children:"Custom Provider"}),"\n",(0,s.jsx)(n.p,{children:"Validates tokens against a custom authentication endpoint:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'server:\n  auth:\n    provider_config:\n      type: "custom"\n      endpoint: "https://auth.example.com/validate"  # URL of the auth endpoint\n'})}),"\n",(0,s.jsx)(n.p,{children:"The custom endpoint receives a POST request with:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "api_key": "<token>",\n  "request": {\n    "path": "/api/v1/endpoint",\n    "headers": {\n      "content-type": "application/json",\n      "user-agent": "curl/7.64.1"\n    },\n    "params": {\n      "key": ["value"]\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"And must respond with:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "access_attributes": {\n    "roles": ["admin", "user"],\n    "teams": ["ml-team", "nlp-team"],\n    "projects": ["llama-3", "project-x"],\n    "namespaces": ["research"]\n  },\n  "message": "Authentication successful"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"If no access attributes are returned, the token is used as a namespace."}),"\n",(0,s.jsx)(n.h3,{id:"access-control",children:"Access Control"}),"\n",(0,s.jsxs)(n.p,{children:["When authentication is enabled, access to resources is controlled\nthrough the ",(0,s.jsx)(n.code,{children:"access_policy"})," attribute of the auth config section under\nserver. The value for this is a list of access rules."]}),"\n",(0,s.jsx)(n.p,{children:"Each access rule defines a list of actions either to permit or to\nforbid. It may specify a principal or a resource that must match for\nthe rule to take effect."}),"\n",(0,s.jsx)(n.p,{children:"Valid actions are create, read, update, and delete. The resource to\nmatch should be specified in the form of a type qualified identifier,\ne.g.  model::my-model or vector_db::some-db, or a wildcard for all\nresources of a type, e.g. model::*. If the principal or resource are\nnot specified, they will match all requests."}),"\n",(0,s.jsx)(n.p,{children:"The valid resource types are model, shield, vector_db, dataset,\nscoring_function, benchmark, tool, tool_group and session."}),"\n",(0,s.jsx)(n.p,{children:"A rule may also specify a condition, either a 'when' or an 'unless',\nwith additional constraints as to where the rule applies. The\nconstraints supported at present are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["'user with ",(0,s.jsx)(n.code,{children:"<attr-value>"})," in ",(0,s.jsx)(n.code,{children:"<attr-name>"}),"'"]}),"\n",(0,s.jsxs)(n.li,{children:["'user with ",(0,s.jsx)(n.code,{children:"<attr-value>"})," not in ",(0,s.jsx)(n.code,{children:"<attr-name>"}),"'"]}),"\n",(0,s.jsx)(n.li,{children:"'user is owner'"}),"\n",(0,s.jsx)(n.li,{children:"'user is not owner'"}),"\n",(0,s.jsxs)(n.li,{children:["'user in owners ",(0,s.jsx)(n.code,{children:"<attr-name>"}),"'"]}),"\n",(0,s.jsxs)(n.li,{children:["'user not in owners ",(0,s.jsx)(n.code,{children:"<attr-name>"}),"'"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The attributes defined for a user will depend on how the auth\nconfiguration is defined."}),"\n",(0,s.jsx)(n.p,{children:"When checking whether a particular action is allowed by the current\nuser for a resource, all the defined rules are tested in order to find\na match. If a match is found, the request is permitted or forbidden\ndepending on the type of rule. If no match is found, the request is\ndenied."}),"\n",(0,s.jsx)(n.p,{children:"If no explicit rules are specified, a default policy is defined with\nwhich all users can access all resources defined in config but\nresources created dynamically can only be accessed by the user that\ncreated them."}),"\n",(0,s.jsx)(n.h4,{id:"examples-1",children:"Examples"}),"\n",(0,s.jsx)(n.p,{children:"The following restricts access to particular github users:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'server:\n  auth:\n    provider_config:\n      type: "github_token"\n      github_api_base_url: "https://api.github.com"\n  access_policy:\n  - permit:\n      principal: user-1\n      actions: [create, read, delete]\n    description: user-1 has full access to all resources\n  - permit:\n      principal: user-2\n      actions: [read]\n      resource: model::model-1\n    description: user-2 has read access to model-1 only\n'})}),"\n",(0,s.jsx)(n.p,{children:"Similarly, the following restricts access to particular kubernetes\nservice accounts:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'server:\n  auth:\n    provider_config:\n      type: "oauth2_token"\n      audience: https://kubernetes.default.svc.cluster.local\n      issuer: https://kubernetes.default.svc.cluster.local\n      tls_cafile: /home/gsim/.minikube/ca.crt\n      jwks:\n        uri: https://kubernetes.default.svc.cluster.local:8443/openid/v1/jwks\n        token: ${env.TOKEN}\n    access_policy:\n    - permit:\n        principal: system:serviceaccount:my-namespace:my-serviceaccount\n        actions: [create, read, delete]\n      description: specific serviceaccount has full access to all resources\n    - permit:\n        principal: system:serviceaccount:default:default\n        actions: [read]\n        resource: model::model-1\n      description: default account has read access to model-1 only\n'})}),"\n",(0,s.jsx)(n.p,{children:"The following policy, which assumes that users are defined with roles\nand teams by whichever authentication system is in use, allows any\nuser with a valid token to use models, create resources other than\nmodels, read and delete resources they created and read resources\ncreated by users sharing a team with them:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"access_policy:\n- permit:\n    actions: [read]\n    resource: model::*\n  description: all users have read access to models\n- forbid:\n    actions: [create, delete]\n    resource: model::*\n  unless: user with admin in roles\n  description: only user with admin role can create or delete models\n- permit:\n    actions: [create, read, delete]\n  when: user is owner\n  description: users can create resources other than models and read and delete those they own\n- permit:\n    actions: [read]\n  when: user in owner teams\n  description: any user has read access to any resource created by a user with the same team\n"})}),"\n",(0,s.jsx)(n.h4,{id:"api-endpoint-authorization-with-scopes",children:"API Endpoint Authorization with Scopes"}),"\n",(0,s.jsx)(n.p,{children:"In addition to resource-based access control, Llama Stack supports endpoint-level authorization using OAuth 2.0 style scopes. When authentication is enabled, specific API endpoints require users to have particular scopes in their authentication token."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Scope-Gated APIs:"}),"\nThe following APIs are currently gated by scopes:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Telemetry API"})," (scope: ",(0,s.jsx)(n.code,{children:"telemetry.read"}),"):","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"POST /telemetry/traces"})," - Query traces"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GET /telemetry/traces/{trace_id}"})," - Get trace by ID"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GET /telemetry/traces/{trace_id}/spans/{span_id}"})," - Get span by ID"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"POST /telemetry/spans/{span_id}/tree"})," - Get span tree"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"POST /telemetry/spans"})," - Query spans"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"POST /telemetry/metrics/{metric_name}"})," - Query metrics"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Authentication Configuration:"})}),"\n",(0,s.jsxs)(n.p,{children:["For ",(0,s.jsx)(n.strong,{children:"JWT/OAuth2 providers"}),", scopes should be included in the JWT's claims:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "sub": "user123",\n  "scope": "telemetry.read",\n  "aud": "llama-stack"\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["For ",(0,s.jsx)(n.strong,{children:"custom authentication providers"}),", the endpoint must return user attributes including the ",(0,s.jsx)(n.code,{children:"scopes"})," array:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "principal": "user123",\n  "attributes": {\n    "scopes": ["telemetry.read"]\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Users without the required scope receive a 403 Forbidden response"}),"\n",(0,s.jsx)(n.li,{children:"When authentication is disabled, scope checks are bypassed"}),"\n",(0,s.jsxs)(n.li,{children:["Endpoints without ",(0,s.jsx)(n.code,{children:"required_scope"})," work normally for all authenticated users"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"quota-configuration",children:"Quota Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"quota"})," section allows you to enable server-side request throttling for both\nauthenticated and anonymous clients. This is useful for preventing abuse, enforcing\nfairness across tenants, and controlling infrastructure costs without requiring\nclient-side rate limiting or external proxies."]}),"\n",(0,s.jsx)(n.p,{children:"Quotas are disabled by default. When enabled, each client is tracked using either:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Their authenticated ",(0,s.jsx)(n.code,{children:"client_id"})," (derived from the Bearer token), or"]}),"\n",(0,s.jsx)(n.li,{children:"Their IP address (fallback for anonymous requests)"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Quota state is stored in a SQLite-backed key-value store, and rate limits are applied\nwithin a configurable time window (currently only ",(0,s.jsx)(n.code,{children:"day"})," is supported)."]}),"\n",(0,s.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"server:\n  quota:\n    kvstore:\n      type: sqlite\n      db_path: ./quotas.db\n    anonymous_max_requests: 100\n    authenticated_max_requests: 1000\n    period: day\n"})}),"\n",(0,s.jsx)(n.h4,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"kvstore"})}),(0,s.jsx)(n.td,{children:"Required. Backend storage config for tracking request counts."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"kvstore.type"})}),(0,s.jsxs)(n.td,{children:["Must be ",(0,s.jsx)(n.code,{children:'"sqlite"'})," for now. Other backends may be supported in the future."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"kvstore.db_path"})}),(0,s.jsx)(n.td,{children:"File path to the SQLite database."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"anonymous_max_requests"})}),(0,s.jsx)(n.td,{children:"Max requests per period for unauthenticated clients."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"authenticated_max_requests"})}),(0,s.jsx)(n.td,{children:"Max requests per period for authenticated clients."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"period"})}),(0,s.jsxs)(n.td,{children:["Time window for quota enforcement. Only ",(0,s.jsx)(n.code,{children:'"day"'})," is supported."]})]})]})]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["If ",(0,s.jsx)(n.code,{children:"authenticated_max_requests"})," is set but no authentication provider is\nconfigured, the server will fall back to applying ",(0,s.jsx)(n.code,{children:"anonymous_max_requests"})," to all\nclients."]})}),"\n",(0,s.jsx)(n.h4,{id:"example-with-authentication-enabled",children:"Example with Authentication Enabled"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"server:\n  port: 8321\n  auth:\n    provider_config:\n      type: custom\n      endpoint: https://auth.example.com/validate\n  quota:\n    kvstore:\n      type: sqlite\n      db_path: ./quotas.db\n    anonymous_max_requests: 100\n    authenticated_max_requests: 1000\n    period: day\n"})}),"\n",(0,s.jsx)(n.p,{children:"If a client exceeds their limit, the server responds with:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-http",children:'HTTP/1.1 429 Too Many Requests\nContent-Type: application/json\n\n{\n  "error": {\n    "message": "Quota exceeded"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"cors-configuration-1",children:"CORS Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Configure CORS to allow web browsers to make requests from different domains. Disabled by default."}),"\n",(0,s.jsx)(n.h4,{id:"quick-setup",children:"Quick Setup"}),"\n",(0,s.jsx)(n.p,{children:"For development, use the simple boolean flag:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"server:\n  cors: true  # Auto-enables localhost with any port\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This automatically allows ",(0,s.jsx)(n.code,{children:"http://localhost:*"})," and ",(0,s.jsx)(n.code,{children:"https://localhost:*"})," with secure defaults."]}),"\n",(0,s.jsx)(n.h4,{id:"custom-configuration",children:"Custom Configuration"}),"\n",(0,s.jsx)(n.p,{children:"For specific origins and full control:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'server:\n  cors:\n    allow_origins: ["https://myapp.com", "https://staging.myapp.com"]\n    allow_credentials: true\n    allow_methods: ["GET", "POST", "PUT", "DELETE"]\n    allow_headers: ["Content-Type", "Authorization"]\n    allow_origin_regex: "https://.*\\\\.example\\\\.com"  # Optional regex pattern\n    expose_headers: ["X-Total-Count"]\n    max_age: 86400\n'})}),"\n",(0,s.jsx)(n.h4,{id:"configuration-options-1",children:"Configuration Options"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Default"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"allow_origins"})}),(0,s.jsxs)(n.td,{children:["List of allowed origins. Use ",(0,s.jsx)(n.code,{children:'["*"]'})," for any."]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'["*"]'})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"allow_origin_regex"})}),(0,s.jsx)(n.td,{children:"Regex pattern for allowed origins (optional)."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"None"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"allow_methods"})}),(0,s.jsx)(n.td,{children:"Allowed HTTP methods."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'["*"]'})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"allow_headers"})}),(0,s.jsx)(n.td,{children:"Allowed headers."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'["*"]'})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"allow_credentials"})}),(0,s.jsx)(n.td,{children:"Allow credentials (cookies, auth headers)."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"expose_headers"})}),(0,s.jsx)(n.td,{children:"Headers exposed to browser."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[]"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"max_age"})}),(0,s.jsx)(n.td,{children:"Preflight cache time (seconds)."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"600"})})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Security Notes"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"allow_credentials: true"})," requires explicit origins (no wildcards)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"cors: true"})," enables localhost access only (secure for development)"]}),"\n",(0,s.jsx)(n.li,{children:"For public APIs, always specify exact allowed origins"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"extending-to-handle-safety",children:"Extending to handle Safety"}),"\n",(0,s.jsx)(n.p,{children:"Configuring Safety can be a little involved so it is instructive to go through an example."}),"\n",(0,s.jsxs)(n.p,{children:["The Safety API works with the associated Resource called a ",(0,s.jsx)(n.code,{children:"Shield"}),". Providers can support various kinds of Shields. Good examples include the ",(0,s.jsx)(n.a,{href:"https://ai.meta.com/research/publications/llama-guard-llm-based-input-output-safeguard-for-human-ai-conversations/",children:"Llama Guard"})," system-safety models, or ",(0,s.jsx)(n.a,{href:"https://aws.amazon.com/bedrock/guardrails/",children:"Bedrock Guardrails"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"To configure a Bedrock Shield, you would need to add:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["A Safety API provider instance with type ",(0,s.jsx)(n.code,{children:"remote::bedrock"})]}),"\n",(0,s.jsx)(n.li,{children:"A Shield resource served by this provider."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"...\nproviders:\n  safety:\n  - provider_id: bedrock\n    provider_type: remote::bedrock\n    config:\n      aws_access_key_id: ${env.AWS_ACCESS_KEY_ID}\n      aws_secret_access_key: ${env.AWS_SECRET_ACCESS_KEY}\n...\nshields:\n- provider_id: bedrock\n  params:\n    guardrailVersion: ${env.GUARDRAIL_VERSION}\n  provider_shield_id: ${env.GUARDRAIL_ID}\n...\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The situation is more involved if the Shield needs ",(0,s.jsx)(n.em,{children:"Inference"})," of an associated model. This is the case with Llama Guard. In that case, you would need to add:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["A Safety API provider instance with type ",(0,s.jsx)(n.code,{children:"inline::llama-guard"})]}),"\n",(0,s.jsx)(n.li,{children:"An Inference API provider instance for serving the model."}),"\n",(0,s.jsx)(n.li,{children:"A Model resource associated with this provider."}),"\n",(0,s.jsx)(n.li,{children:"A Shield resource served by the Safety provider."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The yaml configuration for this setup, assuming you were using vLLM as your inference server, would look like:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'...\nproviders:\n  safety:\n  - provider_id: llama-guard\n    provider_type: inline::llama-guard\n    config: {}\n  inference:\n  # this vLLM server serves the "normal" inference model (e.g., llama3.2:3b)\n  - provider_id: vllm-0\n    provider_type: remote::vllm\n    config:\n      url: ${env.VLLM_URL:=http://localhost:8000}\n  # this vLLM server serves the llama-guard model (e.g., llama-guard:3b)\n  - provider_id: vllm-1\n    provider_type: remote::vllm\n    config:\n      url: ${env.SAFETY_VLLM_URL:=http://localhost:8001}\n...\nmodels:\n- metadata: {}\n  model_id: ${env.INFERENCE_MODEL}\n  provider_id: vllm-0\n  provider_model_id: null\n- metadata: {}\n  model_id: ${env.SAFETY_MODEL}\n  provider_id: vllm-1\n  provider_model_id: null\nshields:\n- provider_id: llama-guard\n  shield_id: ${env.SAFETY_MODEL}   # Llama Guard shields are identified by the corresponding LlamaGuard model\n  provider_shield_id: null\n...\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},64911:(e,n,i)=>{i.d(n,{A:()=>p});var r=i(96540),s=i(34164),t=i(65627),a=i(77448),o=i(9136);const l={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var c=i(74848);function d({className:e,block:n,selectedValue:i,selectValue:r,tabValues:a}){const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,t.a_)(),h=e=>{const n=e.currentTarget,s=o.indexOf(n),t=a[s].value;t!==i&&(d(n),r(t))},u=e=>{let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const i=o.indexOf(e.currentTarget)+1;n=o[i]??o[0];break}case"ArrowLeft":{const i=o.indexOf(e.currentTarget)-1;n=o[i]??o[o.length-1];break}}n?.focus()};return(0,c.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},e),children:a.map(({value:e,label:n,attributes:r})=>(0,c.jsx)("li",{role:"tab",tabIndex:i===e?0:-1,"aria-selected":i===e,ref:e=>{o.push(e)},onKeyDown:u,onClick:h,...r,className:(0,s.A)("tabs__item",l.tabItem,r?.className,{"tabs__item--active":i===e}),children:n??e},e))})}function h({lazy:e,children:n,selectedValue:i}){const t=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=t.find(e=>e.props.value===i);return e?(0,r.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,c.jsx)("div",{className:"margin-top--md",children:t.map((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==i}))})}function u(e){const n=(0,a.u)(e);return(0,c.jsxs)("div",{className:(0,s.A)("tabs-container",l.tabList),children:[(0,c.jsx)(d,{...n,...e}),(0,c.jsx)(h,{...n,...e})]})}function p(e){const n=(0,o.default)();return(0,c.jsx)(u,{...e,children:(0,a.v)(e.children)},String(n))}},77448:(e,n,i)=>{i.d(n,{u:()=>p,v:()=>c});var r=i(96540),s=i(56347),t=i(50372),a=i(30604),o=i(78749),l=i(11861);function c(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function d(e){const{values:n,children:i}=e;return(0,r.useMemo)(()=>{const e=n??function(e){return c(e).map(({props:{value:e,label:n,attributes:i,default:r}})=>({value:e,label:n,attributes:i,default:r}))}(i);return function(e){const n=(0,l.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,i])}function h({value:e,tabValues:n}){return n.some(n=>n.value===e)}function u({queryString:e=!1,groupId:n}){const i=(0,s.W6)(),t=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,a.aZ)(t),(0,r.useCallback)(e=>{if(!t)return;const n=new URLSearchParams(i.location.search);n.set(t,e),i.replace({...i.location,search:n.toString()})},[t,i])]}function p(e){const{defaultValue:n,queryString:i=!1,groupId:s}=e,a=d(e),[l,c]=(0,r.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const i=n.find(e=>e.default)??n[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:a})),[p,m]=u({queryString:i,groupId:s}),[x,f]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[i,s]=(0,o.Dv)(n);return[i,(0,r.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:s}),v=(()=>{const e=p??x;return h({value:e,tabValues:a})?e:null})();(0,t.A)(()=>{v&&c(v)},[v]);return{selectedValue:l,selectValue:(0,r.useCallback)(e=>{if(!h({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);c(e),m(e),f(e)},[m,f,a]),tabValues:a}}},79329:(e,n,i)=>{i.r(n),i.d(n,{default:()=>a});i(96540);var r=i(34164);const s={tabItem:"tabItem_Ymn6"};var t=i(74848);function a({children:e,hidden:n,className:i}){return(0,t.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,i),hidden:n,children:e})}}}]);