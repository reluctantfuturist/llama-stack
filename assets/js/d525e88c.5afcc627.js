"use strict";(self.webpackChunkdocusaurus_template_openapi_docs=self.webpackChunkdocusaurus_template_openapi_docs||[]).push([[8725],{28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var i=r(96540);const t={},s=i.createContext(t);function o(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(s.Provider,{value:n},e.children)}},49382:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"providers/inference/remote_openai","title":"remote::openai","description":"OpenAI inference provider for accessing GPT models and other OpenAI services","source":"@site/docs/providers/inference/remote_openai.mdx","sourceDirName":"providers/inference","slug":"/providers/inference/remote_openai","permalink":"/llama-stack/docs/providers/inference/remote_openai","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-llama/llama-stack/tree/main/docs/docs/providers/inference/remote_openai.mdx","tags":[],"version":"current","sidebarPosition":17,"frontMatter":{"description":"OpenAI inference provider for accessing GPT models and other OpenAI services","sidebar_label":"Openai","sidebar_position":17,"title":"remote::openai"},"sidebar":"tutorialSidebar","previous":{"title":"Ollama","permalink":"/llama-stack/docs/providers/inference/remote_ollama"},"next":{"title":"Passthrough","permalink":"/llama-stack/docs/providers/inference/remote_passthrough"}}');var t=r(74848),s=r(28453);const o={description:"OpenAI inference provider for accessing GPT models and other OpenAI services",sidebar_label:"Openai",sidebar_position:17,title:"remote::openai"},a="remote::openai",c={},d=[{value:"Description",id:"description",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Sample Configuration",id:"sample-configuration",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"remoteopenai",children:"remote::openai"})}),"\n",(0,t.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(n.p,{children:"OpenAI inference provider for accessing GPT models and other OpenAI services."}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Field"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Required"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"api_key"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"str | None"})}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"API key for OpenAI models"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"base_url"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"<class 'str'>"})}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://api.openai.com/v1",children:"https://api.openai.com/v1"})}),(0,t.jsx)(n.td,{children:"Base URL for OpenAI API"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"sample-configuration",children:"Sample Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"api_key: ${env.OPENAI_API_KEY:=}\nbase_url: ${env.OPENAI_BASE_URL:=https://api.openai.com/v1}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);