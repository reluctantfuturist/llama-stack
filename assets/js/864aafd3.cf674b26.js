"use strict";(self.webpackChunkdocusaurus_template_openapi_docs=self.webpackChunkdocusaurus_template_openapi_docs||[]).push([[7542],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var a=t(96540);const r={},l=a.createContext(r);function s(e){const n=a.useContext(l);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(l.Provider,{value:n},e.children)}},31490:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"deploying/kubernetes","title":"Kubernetes Deployment Guide","description":"Deploy Llama Stack on Kubernetes clusters with vLLM inference service","source":"@site/docs/deploying/kubernetes.mdx","sourceDirName":"deploying","slug":"/deploying/kubernetes","permalink":"/llama-stack/docs/deploying/kubernetes","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-llama/llama-stack/tree/main/docs/docs/deploying/kubernetes.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Kubernetes Deployment Guide","description":"Deploy Llama Stack on Kubernetes clusters with vLLM inference service","sidebar_label":"Kubernetes","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/llama-stack/docs/deploying/"},"next":{"title":"Overview","permalink":"/llama-stack/docs/contributing/"}}');var r=t(74848),l=t(28453);t(64911),t(79329);const s={title:"Kubernetes Deployment Guide",description:"Deploy Llama Stack on Kubernetes clusters with vLLM inference service",sidebar_label:"Kubernetes",sidebar_position:2},i="Kubernetes Deployment Guide",o={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Local Kubernetes Setup",id:"local-kubernetes-setup",level:3},{value:"Quick Deployment",id:"quick-deployment",level:2},{value:"Step 1: Create Storage and Secrets",id:"step-1-create-storage-and-secrets",level:3},{value:"Step 2: Deploy vLLM Server",id:"step-2-deploy-vllm-server",level:3},{value:"Step 3: Configure Llama Stack",id:"step-3-configure-llama-stack",level:3},{value:"Step 4: Deploy Llama Stack Server",id:"step-4-deploy-llama-stack-server",level:3},{value:"Step 5: Test Deployment",id:"step-5-test-deployment",level:3},{value:"AWS EKS Deployment",id:"aws-eks-deployment",level:2},{value:"Prerequisites",id:"prerequisites-1",level:3},{value:"Automated Deployment",id:"automated-deployment",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Related Resources",id:"related-resources",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"kubernetes-deployment-guide",children:"Kubernetes Deployment Guide"})}),"\n",(0,r.jsx)(n.p,{children:"Deploy Llama Stack and vLLM servers in a Kubernetes cluster instead of running them locally. This guide covers both local development with Kind and production deployment on AWS EKS."}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.h3,{id:"local-kubernetes-setup",children:"Local Kubernetes Setup"}),"\n",(0,r.jsx)(n.p,{children:"Create a local Kubernetes cluster via Kind:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kind create cluster --image kindest/node:v1.32.0 --name llama-stack-test\n"})}),"\n",(0,r.jsx)(n.p,{children:"Set your Hugging Face token:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'export HF_TOKEN=$(echo -n "your-hf-token" | base64)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"quick-deployment",children:"Quick Deployment"}),"\n",(0,r.jsx)(n.h3,{id:"step-1-create-storage-and-secrets",children:"Step 1: Create Storage and Secrets"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"cat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: vllm-models\nspec:\n  accessModes:\n    - ReadWriteOnce\n  volumeMode: Filesystem\n  resources:\n    requests:\n      storage: 50Gi\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: hf-token-secret\ntype: Opaque\ndata:\n  token: $HF_TOKEN\nEOF\n"})}),"\n",(0,r.jsx)(n.h3,{id:"step-2-deploy-vllm-server",children:"Step 2: Deploy vLLM Server"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'cat <<EOF | kubectl apply -f -\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: vllm-server\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: vllm\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: vllm\n    spec:\n      containers:\n      - name: vllm\n        image: vllm/vllm-openai:latest\n        command: ["/bin/sh", "-c"]\n        args: ["vllm serve meta-llama/Llama-3.2-1B-Instruct"]\n        env:\n        - name: HUGGING_FACE_HUB_TOKEN\n          valueFrom:\n            secretKeyRef:\n              name: hf-token-secret\n              key: token\n        ports:\n          - containerPort: 8000\n        volumeMounts:\n          - name: llama-storage\n            mountPath: /root/.cache/huggingface\n      volumes:\n      - name: llama-storage\n        persistentVolumeClaim:\n          claimName: vllm-models\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: vllm-server\nspec:\n  selector:\n    app.kubernetes.io/name: vllm\n  ports:\n  - protocol: TCP\n    port: 8000\n    targetPort: 8000\n  type: ClusterIP\nEOF\n'})}),"\n",(0,r.jsx)(n.h3,{id:"step-3-configure-llama-stack",children:"Step 3: Configure Llama Stack"}),"\n",(0,r.jsx)(n.p,{children:"Update your run configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"providers:\n  inference:\n  - provider_id: vllm\n    provider_type: remote::vllm\n    config:\n      url: http://vllm-server.default.svc.cluster.local:8000/v1\n      max_tokens: 4096\n      api_token: fake\n"})}),"\n",(0,r.jsx)(n.p,{children:"Build container image:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"tmp_dir=$(mktemp -d) && cat >$tmp_dir/Containerfile.llama-stack-run-k8s <<EOF\nFROM distribution-myenv:dev\nRUN apt-get update && apt-get install -y git\nRUN git clone https://github.com/meta-llama/llama-stack.git /app/llama-stack-source\nADD ./vllm-llama-stack-run-k8s.yaml /app/config.yaml\nEOF\npodman build -f $tmp_dir/Containerfile.llama-stack-run-k8s -t llama-stack-run-k8s $tmp_dir\n"})}),"\n",(0,r.jsx)(n.h3,{id:"step-4-deploy-llama-stack-server",children:"Step 4: Deploy Llama Stack Server"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'cat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: llama-pvc\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 1Gi\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: llama-stack-server\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: llama-stack\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: llama-stack\n    spec:\n      containers:\n      - name: llama-stack\n        image: localhost/llama-stack-run-k8s:latest\n        imagePullPolicy: IfNotPresent\n        command: ["python", "-m", "llama_stack.core.server.server", "--config", "/app/config.yaml"]\n        ports:\n          - containerPort: 5000\n        volumeMounts:\n          - name: llama-storage\n            mountPath: /root/.llama\n      volumes:\n      - name: llama-storage\n        persistentVolumeClaim:\n          claimName: llama-pvc\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: llama-stack-service\nspec:\n  selector:\n    app.kubernetes.io/name: llama-stack\n  ports:\n  - protocol: TCP\n    port: 5000\n    targetPort: 5000\n  type: ClusterIP\nEOF\n'})}),"\n",(0,r.jsx)(n.h3,{id:"step-5-test-deployment",children:"Step 5: Test Deployment"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Port forward and test\nkubectl port-forward service/llama-stack-service 5000:5000\nllama-stack-client --endpoint http://localhost:5000 inference chat-completion --message "hello, what model are you?"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"aws-eks-deployment",children:"AWS EKS Deployment"}),"\n",(0,r.jsx)(n.h3,{id:"prerequisites-1",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Set up an ",(0,r.jsx)(n.a,{href:"https://docs.aws.amazon.com/eks/latest/userguide/getting-started.html",children:"EKS cluster"})]}),"\n",(0,r.jsxs)(n.li,{children:["Create a ",(0,r.jsx)(n.a,{href:"https://docs.github.com/en/apps/oauth-apps/building-oauth-apps/creating-an-oauth-app",children:"GitHub OAuth app"})]}),"\n",(0,r.jsxs)(n.li,{children:["Set authorization callback URL to ",(0,r.jsx)(n.code,{children:"http://<your-llama-stack-ui-url>/api/auth/callback/"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"automated-deployment",children:"Automated Deployment"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"export HF_TOKEN=<your-huggingface-token>\nexport GITHUB_CLIENT_ID=<your-github-client-id>\nexport GITHUB_CLIENT_SECRET=<your-github-client-secret>\nexport LLAMA_STACK_UI_URL=<your-llama-stack-ui-url>\n\ncd docs/source/distributions/eks\n./apply.sh\n"})}),"\n",(0,r.jsx)(n.p,{children:"This script will:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Set up default storage class for AWS EKS"}),"\n",(0,r.jsx)(n.li,{children:"Deploy Llama Stack server in Kubernetes pods and services"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Check pod status:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl get pods -l app.kubernetes.io/name=vllm\nkubectl logs -l app.kubernetes.io/name=vllm\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Test service connectivity:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl run -it --rm debug --image=curlimages/curl --restart=Never -- curl http://vllm-server:8000/v1/models\n"})}),"\n",(0,r.jsx)(n.h2,{id:"related-resources",children:"Related Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./index",children:"Deployment Overview"})})," - Overview of deployment options"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/distributions",children:"Distributions"})})," - Understanding Llama Stack distributions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/distributions/configuration",children:"Configuration"})})," - Detailed configuration options"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},64911:(e,n,t)=>{t.d(n,{A:()=>m});var a=t(96540),r=t(34164),l=t(65627),s=t(77448),i=t(9136);const o={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var c=t(74848);function u({className:e,block:n,selectedValue:t,selectValue:a,tabValues:s}){const i=[],{blockElementScrollPositionUntilNextRender:u}=(0,l.a_)(),d=e=>{const n=e.currentTarget,r=i.indexOf(n),l=s[r].value;l!==t&&(u(n),a(l))},p=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,c.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:s.map(({value:e,label:n,attributes:a})=>(0,c.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{i.push(e)},onKeyDown:p,onClick:d,...a,className:(0,r.A)("tabs__item",o.tabItem,a?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function d({lazy:e,children:n,selectedValue:t}){const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=l.find(e=>e.props.value===t);return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,c.jsx)("div",{className:"margin-top--md",children:l.map((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function p(e){const n=(0,s.u)(e);return(0,c.jsxs)("div",{className:(0,r.A)("tabs-container",o.tabList),children:[(0,c.jsx)(u,{...n,...e}),(0,c.jsx)(d,{...n,...e})]})}function m(e){const n=(0,i.default)();return(0,c.jsx)(p,{...e,children:(0,s.v)(e.children)},String(n))}},77448:(e,n,t)=>{t.d(n,{u:()=>m,v:()=>c});var a=t(96540),r=t(56347),l=t(50372),s=t(30604),i=t(78749),o=t(11861);function c(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,a.useMemo)(()=>{const e=n??function(e){return c(e).map(({props:{value:e,label:n,attributes:t,default:a}})=>({value:e,label:n,attributes:t,default:a}))}(t);return function(e){const n=(0,o.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function d({value:e,tabValues:n}){return n.some(n=>n.value===e)}function p({queryString:e=!1,groupId:n}){const t=(0,r.W6)(),l=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,s.aZ)(l),(0,a.useCallback)(e=>{if(!l)return;const n=new URLSearchParams(t.location.search);n.set(l,e),t.replace({...t.location,search:n.toString()})},[l,t])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=u(e),[o,c]=(0,a.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!d({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s})),[m,h]=p({queryString:t,groupId:r}),[v,b]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,r]=(0,i.Dv)(n);return[t,(0,a.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),g=(()=>{const e=m??v;return d({value:e,tabValues:s})?e:null})();(0,l.A)(()=>{g&&c(g)},[g]);return{selectedValue:o,selectValue:(0,a.useCallback)(e=>{if(!d({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),h(e),b(e)},[h,b,s]),tabValues:s}}},79329:(e,n,t)=>{t.r(n),t.d(n,{default:()=>s});t(96540);var a=t(34164);const r={tabItem:"tabItem_Ymn6"};var l=t(74848);function s({children:e,hidden:n,className:t}){return(0,l.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,t),hidden:n,children:e})}}}]);