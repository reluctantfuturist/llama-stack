"use strict";(self.webpackChunkdocusaurus_template_openapi_docs=self.webpackChunkdocusaurus_template_openapi_docs||[]).push([[3017],{6464:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"concepts/apis","title":"APIs","description":"Available REST APIs and planned capabilities in Llama Stack","source":"@site/docs/concepts/apis.mdx","sourceDirName":"concepts","slug":"/concepts/apis","permalink":"/llama-stack/docs/concepts/apis","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-llama/llama-stack/tree/main/docs/docs/concepts/apis.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"APIs","description":"Available REST APIs and planned capabilities in Llama Stack","sidebar_label":"APIs","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Architecture","permalink":"/llama-stack/docs/concepts/architecture"},"next":{"title":"API Providers","permalink":"/llama-stack/docs/concepts/api-providers"}}');var i=s(74848),r=s(28453);const a={title:"APIs",description:"Available REST APIs and planned capabilities in Llama Stack",sidebar_label:"APIs",sidebar_position:3},o="APIs",c={},l=[];function d(e){const n={h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"apis",children:"APIs"})}),"\n",(0,i.jsx)(n.p,{children:"A Llama Stack API is described as a collection of REST endpoints. We currently support the following APIs:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Inference"}),": run inference with a LLM"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Safety"}),": apply safety policies to the output at a Systems (not only model) level"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Agents"}),": run multi-step agentic workflows with LLMs with tool usage, memory (RAG), etc."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DatasetIO"}),": interface with datasets and data loaders"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Scoring"}),": evaluate outputs of the system"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Eval"}),": generate outputs (via Inference or Agents) and perform scoring"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"VectorIO"}),": perform operations on vector stores, such as adding documents, searching, and deleting documents"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Telemetry"}),": collect telemetry data from the system"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Post Training"}),": fine-tune a model"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Tool Runtime"}),": interact with various tools and protocols"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Responses"}),": generate responses from an LLM using this OpenAI compatible API."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"We are working on adding a few more APIs to complete the application lifecycle. These will include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Batch Inference"}),": run inference on a dataset of inputs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Batch Agents"}),": run agents on a dataset of inputs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Synthetic Data Generation"}),": generate synthetic data for model development"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Batches"}),": OpenAI-compatible batch management for inference"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var t=s(96540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);