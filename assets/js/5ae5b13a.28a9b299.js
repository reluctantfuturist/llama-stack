"use strict";(self.webpackChunkdocusaurus_template_openapi_docs=self.webpackChunkdocusaurus_template_openapi_docs||[]).push([[1964],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(96540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}},35249:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"providers/agents/index","title":"Agents","description":"Available providers for the agents API","source":"@site/docs/providers/agents/index.mdx","sourceDirName":"providers/agents","slug":"/providers/agents/","permalink":"/llama-stack/docs/providers/agents/","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-llama/llama-stack/tree/main/docs/docs/providers/agents/index.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"description":"Available providers for the agents API","sidebar_label":"Overview","sidebar_position":1,"title":"Agents"},"sidebar":"tutorialSidebar","previous":{"title":"Wolfram Alpha","permalink":"/llama-stack/docs/providers/tool_runtime/remote_wolfram-alpha"},"next":{"title":"Meta Reference","permalink":"/llama-stack/docs/providers/agents/inline_meta-reference"}}');var r=t(74848),i=t(28453);const o={description:"Available providers for the agents API",sidebar_label:"Overview",sidebar_position:1,title:"Agents"},a="Agents",l={},d=[{value:"Overview",id:"overview",level:2},{value:"Providers",id:"providers",level:2}];function c(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"agents",children:"Agents"})}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Agents API for creating and interacting with agentic systems."}),"\n",(0,r.jsx)(n.p,{children:"Main functionalities provided by this API:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create agents with specific instructions and ability to use tools."}),"\n",(0,r.jsx)(n.li,{children:'Interactions with agents are grouped into sessions ("threads"), and each interaction is called a "turn".'}),"\n",(0,r.jsx)(n.li,{children:"Agents can be provided with various tools (see the ToolGroups and ToolRuntime APIs for more details)."}),"\n",(0,r.jsx)(n.li,{children:"Agents can be provided with various shields (see the Safety API for more details)."}),"\n",(0,r.jsx)(n.li,{children:"Agents can also use Memory to retrieve information from knowledge bases. See the RAG Tool and Vector IO APIs for more details."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["This section contains documentation for all available providers for the ",(0,r.jsx)(n.strong,{children:"agents"})," API."]}),"\n",(0,r.jsx)(n.h2,{id:"providers",children:"Providers"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./inline_meta-reference",children:"Meta Reference"})})," - Inline provider"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);