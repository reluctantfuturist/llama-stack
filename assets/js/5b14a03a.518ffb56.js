"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[514],{74768:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>n,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"providers/vector_io/remote_chromadb","title":"remote::chromadb","description":"[Chroma](https://www","source":"@site/docs/providers/vector_io/remote_chromadb.mdx","sourceDirName":"providers/vector_io","slug":"/providers/vector_io/remote_chromadb","permalink":"/llama-stack/docs/providers/vector_io/remote_chromadb","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-llama/llama-stack/tree/main/docs/docs/providers/vector_io/remote_chromadb.mdx","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"description":"[Chroma](https://www","sidebar_label":"Chromadb","sidebar_position":9,"title":"remote::chromadb"},"sidebar":"tutorialSidebar","previous":{"title":"SQLite-Vec","permalink":"/llama-stack/docs/providers/vector_io/inline_sqlite-vec"},"next":{"title":"Milvus","permalink":"/llama-stack/docs/providers/vector_io/remote_milvus"}}');var i=t(74848),s=t(28453);const d={description:"[Chroma](https://www",sidebar_label:"Chromadb",sidebar_position:9,title:"remote::chromadb"},n="remote::chromadb",a={},c=[{value:"Description",id:"description",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Sample Configuration",id:"sample-configuration",level:2}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"remotechromadb",children:"remote::chromadb"})}),"\n",(0,i.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"https://www.trychroma.com/",children:"Chroma"})," is an inline and remote vector\ndatabase provider for Llama Stack. It allows you to store and query vectors directly within a Chroma database.\nThat means you're not limited to storing vectors in memory or in a separate service."]}),"\n",(0,i.jsx)(r.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Field"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Required"}),(0,i.jsx)(r.th,{children:"Default"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"url"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"str | None"})}),(0,i.jsx)(r.td,{children:"No"}),(0,i.jsx)(r.td,{}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"kvstore"})}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"utils.kvstore.config.RedisKVStoreConfig | utils.kvstore.config.SqliteKVStoreConfig | utils.kvstore.config.PostgresKVStoreConfig | utils.kvstore.config.MongoDBKVStoreConfig"})}),(0,i.jsx)(r.td,{children:"No"}),(0,i.jsx)(r.td,{children:"sqlite"}),(0,i.jsx)(r.td,{children:"Config for KV store backend"})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"sample-configuration",children:"Sample Configuration"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-yaml",children:"url: ${env.CHROMADB_URL}\nkvstore:\n  type: sqlite\n  db_path: ${env.SQLITE_STORE_DIR:=~/.llama/dummy}/chroma_remote_registry.db\n"})})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);