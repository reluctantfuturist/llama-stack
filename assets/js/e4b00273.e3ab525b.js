"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1646],{8701:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>n,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"providers/files/remote_s3","title":"remote::s3","description":"AWS S3-based file storage provider for scalable cloud file management with metadata persistence","source":"@site/docs/providers/files/remote_s3.mdx","sourceDirName":"providers/files","slug":"/providers/files/remote_s3","permalink":"/docs/providers/files/remote_s3","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-llama/llama-stack/tree/main/docs/docs/providers/files/remote_s3.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"description":"AWS S3-based file storage provider for scalable cloud file management with metadata persistence","sidebar_label":"S3","sidebar_position":3,"title":"remote::s3"},"sidebar":"tutorialSidebar","previous":{"title":"Localfs","permalink":"/docs/providers/files/inline_localfs"},"next":{"title":"Overview","permalink":"/docs/providers/eval/"}}');var i=t(74848),d=t(28453);const n={description:"AWS S3-based file storage provider for scalable cloud file management with metadata persistence",sidebar_label:"S3",sidebar_position:3,title:"remote::s3"},l="remote::s3",c={},o=[{value:"Description",id:"description",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Sample Configuration",id:"sample-configuration",level:2}];function a(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"remotes3",children:"remote::s3"})}),"\n",(0,i.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(s.p,{children:"AWS S3-based file storage provider for scalable cloud file management with metadata persistence."}),"\n",(0,i.jsx)(s.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Field"}),(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{children:"Required"}),(0,i.jsx)(s.th,{children:"Default"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"bucket_name"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"<class 'str'>"})}),(0,i.jsx)(s.td,{children:"No"}),(0,i.jsx)(s.td,{}),(0,i.jsx)(s.td,{children:"S3 bucket name to store files"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"region"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"<class 'str'>"})}),(0,i.jsx)(s.td,{children:"No"}),(0,i.jsx)(s.td,{children:"us-east-1"}),(0,i.jsx)(s.td,{children:"AWS region where the bucket is located"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"aws_access_key_id"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"str | None"})}),(0,i.jsx)(s.td,{children:"No"}),(0,i.jsx)(s.td,{}),(0,i.jsx)(s.td,{children:"AWS access key ID (optional if using IAM roles)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"aws_secret_access_key"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"str | None"})}),(0,i.jsx)(s.td,{children:"No"}),(0,i.jsx)(s.td,{}),(0,i.jsx)(s.td,{children:"AWS secret access key (optional if using IAM roles)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"endpoint_url"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"str | None"})}),(0,i.jsx)(s.td,{children:"No"}),(0,i.jsx)(s.td,{}),(0,i.jsx)(s.td,{children:"Custom S3 endpoint URL (for MinIO, LocalStack, etc.)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"auto_create_bucket"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"<class 'bool'>"})}),(0,i.jsx)(s.td,{children:"No"}),(0,i.jsx)(s.td,{children:"False"}),(0,i.jsx)(s.td,{children:"Automatically create the S3 bucket if it doesn't exist"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"metadata_store"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"utils.sqlstore.sqlstore.SqliteSqlStoreConfig | utils.sqlstore.sqlstore.PostgresSqlStoreConfig"})}),(0,i.jsx)(s.td,{children:"No"}),(0,i.jsx)(s.td,{children:"sqlite"}),(0,i.jsx)(s.td,{children:"SQL store configuration for file metadata"})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"sample-configuration",children:"Sample Configuration"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-yaml",children:"bucket_name: ${env.S3_BUCKET_NAME}\nregion: ${env.AWS_REGION:=us-east-1}\naws_access_key_id: ${env.AWS_ACCESS_KEY_ID:=}\naws_secret_access_key: ${env.AWS_SECRET_ACCESS_KEY:=}\nendpoint_url: ${env.S3_ENDPOINT_URL:=}\nauto_create_bucket: ${env.S3_AUTO_CREATE_BUCKET:=false}\nmetadata_store:\n  type: sqlite\n  db_path: ${env.SQLITE_STORE_DIR:=~/.llama/dummy}/s3_files_metadata.db\n"})})]})}function h(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);