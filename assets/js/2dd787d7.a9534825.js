"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8606],{4865:(e,n,s)=>{s.d(n,{A:()=>p});var i=s(96540),t=s(34164),r=s(23104),l=s(47751),o=s(92303);const c={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var a=s(74848);function d(e){var n=e.className,s=e.block,i=e.selectedValue,l=e.selectValue,o=e.tabValues,d=[],h=(0,r.a_)().blockElementScrollPositionUntilNextRender,u=function(e){var n=e.currentTarget,s=d.indexOf(n),t=o[s].value;t!==i&&(h(n),l(t))},p=function(e){var n,s=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":var i,t=d.indexOf(e.currentTarget)+1;s=null!=(i=d[t])?i:d[0];break;case"ArrowLeft":var r,l=d.indexOf(e.currentTarget)-1;s=null!=(r=d[l])?r:d[d.length-1]}null==(n=s)||n.focus()};return(0,a.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":s},n),children:o.map(function(e){var n=e.value,s=e.label,r=e.attributes;return(0,a.jsx)("li",Object.assign({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:function(e){d.push(e)},onKeyDown:p,onClick:u},r,{className:(0,t.A)("tabs__item",c.tabItem,null==r?void 0:r.className,{"tabs__item--active":i===n}),children:null!=s?s:n}),n)})})}function h(e){var n=e.lazy,s=e.children,r=e.selectedValue,l=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){var o=l.find(function(e){return e.props.value===r});return o?(0,i.cloneElement)(o,{className:(0,t.A)("margin-top--md",o.props.className)}):null}return(0,a.jsx)("div",{className:"margin-top--md",children:l.map(function(e,n){return(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r})})})}function u(e){var n=(0,l.u)(e);return(0,a.jsxs)("div",{className:(0,t.A)("tabs-container",c.tabList),children:[(0,a.jsx)(d,Object.assign({},n,e)),(0,a.jsx)(h,Object.assign({},n,e))]})}function p(e){var n=(0,o.default)();return(0,a.jsx)(u,Object.assign({},e,{children:(0,l.v)(e.children)}),String(n))}},83817:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"contributing/index","title":"Contributing to Llama Stack","description":"Guide for contributing to the Llama Stack project","source":"@site/docs/contributing/index.mdx","sourceDirName":"contributing","slug":"/contributing/","permalink":"/llama-stack/docs/contributing/","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-llama/llama-stack/tree/main/docs/docs/contributing/index.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Contributing to Llama Stack","description":"Guide for contributing to the Llama Stack project","sidebar_label":"Overview","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Kubernetes","permalink":"/llama-stack/docs/deploying/kubernetes"},"next":{"title":"New API Provider","permalink":"/llama-stack/docs/contributing/new-api-provider"}}');var t=s(74848),r=s(28453),l=s(4865),o=s(19365);const c={title:"Contributing to Llama Stack",description:"Guide for contributing to the Llama Stack project",sidebar_label:"Overview",sidebar_position:1},a=void 0,d={},h=[{value:"Quick Start",id:"quick-start",level:2},{value:"Set up your development environment",id:"set-up-your-development-environment",level:3},{value:"Environment Configuration",id:"environment-configuration",level:3},{value:"Pre-commit Hooks",id:"pre-commit-hooks",level:3},{value:"Contributing Workflow",id:"contributing-workflow",level:2},{value:"Discussions \u2192 Issues \u2192 Pull Requests",id:"discussions--issues--pull-requests",level:3},{value:"Opening a Pull Request",id:"opening-a-pull-request",level:3},{value:"Adding New Providers",id:"adding-new-providers",level:2},{value:"Testing",id:"testing",level:2},{value:"Testing Philosophy",id:"testing-philosophy",level:3},{value:"Record-Replay for Integration Tests",id:"record-replay-for-integration-tests",level:3},{value:"Running Tests",id:"running-tests",level:3},{value:"Common Development Tasks",id:"common-development-tasks",level:2},{value:"Using <code>llama stack build</code>",id:"using-llama-stack-build",level:3},{value:"Updating Configurations",id:"updating-configurations",level:3},{value:"Building Documentation",id:"building-documentation",level:3},{value:"Update API Documentation",id:"update-api-documentation",level:3},{value:"Coding Style",id:"coding-style",level:2},{value:"Legal",id:"legal",level:2},{value:"Issues and Security",id:"issues-and-security",level:3},{value:"Contributor License Agreement",id:"contributor-license-agreement",level:3},{value:"License",id:"license",level:3},{value:"Advanced Topics",id:"advanced-topics",level:2},{value:"Related Resources",id:"related-resources",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"We want to make contributing to this project as easy and transparent as possible."}),"\n",(0,t.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,t.jsxs)(l.A,{children:[(0,t.jsxs)(o.default,{value:"setup",label:"Development Setup",children:[(0,t.jsx)(n.h3,{id:"set-up-your-development-environment",children:"Set up your development environment"}),(0,t.jsxs)(n.p,{children:["We use ",(0,t.jsx)(n.a,{href:"https://github.com/astral-sh/uv",children:"uv"})," to manage python dependencies and virtual environments.\nInstall ",(0,t.jsx)(n.code,{children:"uv"})," by following this ",(0,t.jsx)(n.a,{href:"https://docs.astral.sh/uv/getting-started/installation/",children:"guide"}),"."]}),(0,t.jsx)(n.p,{children:"Install dependencies:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd llama-stack\nuv sync --group dev\nuv pip install -e .\nsource .venv/bin/activate\n"})}),(0,t.jsx)(n.admonition,{title:"Python Version",type:"note",children:(0,t.jsxs)(n.p,{children:["You can use a specific version of Python with ",(0,t.jsx)(n.code,{children:"uv"})," by adding the ",(0,t.jsx)(n.code,{children:"--python <version>"})," flag (e.g. ",(0,t.jsx)(n.code,{children:"--python 3.12"}),").\nOtherwise, ",(0,t.jsx)(n.code,{children:"uv"})," will automatically select a Python version according to the ",(0,t.jsx)(n.code,{children:"requires-python"})," section of the ",(0,t.jsx)(n.code,{children:"pyproject.toml"}),".\nFor more info, see the ",(0,t.jsx)(n.a,{href:"https://docs.astral.sh/uv/concepts/python-versions/",children:"uv docs around Python versions"}),"."]})}),(0,t.jsx)(n.h3,{id:"environment-configuration",children:"Environment Configuration"}),(0,t.jsxs)(n.p,{children:["Create a ",(0,t.jsx)(n.code,{children:".env"})," file with necessary environment variables:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"LLAMA_STACK_BASE_URL=http://localhost:8321\nLLAMA_STACK_CLIENT_LOG=debug\nLLAMA_STACK_PORT=8321\nLLAMA_STACK_CONFIG=<provider-name>\nTAVILY_SEARCH_API_KEY=\nBRAVE_SEARCH_API_KEY=\n"})}),(0,t.jsx)(n.p,{children:"Use with integration tests:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"uv run --env-file .env -- pytest -v tests/integration/inference/test_text_inference.py --text-model=meta-llama/Llama-3.1-8B-Instruct\n"})})]}),(0,t.jsxs)(o.default,{value:"pre-commit",label:"Pre-commit Hooks",children:[(0,t.jsx)(n.h3,{id:"pre-commit-hooks",children:"Pre-commit Hooks"}),(0,t.jsxs)(n.p,{children:["We use ",(0,t.jsx)(n.a,{href:"https://pre-commit.com/",children:"pre-commit"})," to run linting and formatting checks:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Install pre-commit hooks (runs automatically before each commit)\nuv run pre-commit install\n\n# Run checks manually\nuv run pre-commit run --all-files\n"})}),(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsx)(n.p,{children:"Before pushing your changes, make sure that the pre-commit hooks have passed successfully."})})]})]}),"\n",(0,t.jsx)(n.h2,{id:"contributing-workflow",children:"Contributing Workflow"}),"\n",(0,t.jsx)(n.h3,{id:"discussions--issues--pull-requests",children:"Discussions \u2192 Issues \u2192 Pull Requests"}),"\n",(0,t.jsxs)(n.p,{children:["We actively welcome your pull requests. If in doubt, please open a ",(0,t.jsx)(n.a,{href:"https://github.com/meta-llama/llama-stack/discussions",children:"discussion"}),"; we can always convert that to an issue later."]}),"\n",(0,t.jsxs)(l.A,{children:[(0,t.jsx)(o.default,{value:"questions",label:"I have a question!",children:(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Open a discussion or use ",(0,t.jsx)(n.a,{href:"https://discord.gg/llama-stack",children:"Discord"})]}),"\n"]})}),(0,t.jsx)(o.default,{value:"bugs",label:"I have a bug!",children:(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Search the issue tracker and discussions for similar issues"}),"\n",(0,t.jsx)(n.li,{children:"If you don't have steps to reproduce, open a discussion"}),"\n",(0,t.jsx)(n.li,{children:"If you have steps to reproduce, open an issue"}),"\n"]})}),(0,t.jsx)(o.default,{value:"features",label:"I have an idea for a feature!",children:(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Open a discussion"}),"\n"]})}),(0,t.jsxs)(o.default,{value:"contributions",label:"I'd like to contribute!",children:[(0,t.jsx)(n.p,{children:'If you are new to the project, start by looking at issues tagged with "good first issue". Leave a comment and a triager will assign it to you.'}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Guidelines:"})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Work on only 1\u20132 issues at a time"}),"\n",(0,t.jsx)(n.li,{children:"Check if issues are already assigned"}),"\n",(0,t.jsx)(n.li,{children:"If blocked, unassign yourself or leave a comment"}),"\n"]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"opening-a-pull-request",children:"Opening a Pull Request"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Fork the repo and create your branch from ",(0,t.jsx)(n.code,{children:"main"})]}),"\n",(0,t.jsx)(n.li,{children:"If you've changed APIs, update the documentation"}),"\n",(0,t.jsx)(n.li,{children:"Ensure the test suite passes"}),"\n",(0,t.jsxs)(n.li,{children:["Make sure your code lints using ",(0,t.jsx)(n.code,{children:"pre-commit"})]}),"\n",(0,t.jsx)(n.li,{children:'Complete the Contributor License Agreement ("CLA")'}),"\n",(0,t.jsxs)(n.li,{children:["Follow ",(0,t.jsx)(n.a,{href:"https://www.conventionalcommits.org/en/v1.0.0/",children:"conventional commits format"})]}),"\n",(0,t.jsxs)(n.li,{children:["Follow the ",(0,t.jsx)(n.a,{href:"#coding-style",children:"coding style guidelines"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Keep PRs small and focused. Split large changes into logically grouped, smaller PRs."}),"\n",(0,t.jsx)(n.admonition,{title:"PR Guidelines",type:"tip",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Experienced contributors"}),": No more than 5 open PRs at a time"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"New contributors"}),": One open PR at a time until familiar with the process"]}),"\n"]})}),"\n",(0,t.jsx)(n.h2,{id:"adding-new-providers",children:"Adding New Providers"}),"\n",(0,t.jsx)(n.p,{children:"Learn how to extend Llama Stack with new capabilities:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"./new-api-provider",children:"Adding a New API Provider"})})," - Add new API providers to the Stack"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"./new-vector-database",children:"Adding a Vector Database"})})," - Add new vector databases"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/docs/providers/external",children:"External Providers"})})," - Add external providers to the Stack"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,t.jsx)(n.p,{children:"Llama Stack uses two types of tests:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Location"}),(0,t.jsx)(n.th,{children:"Purpose"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Unit"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"tests/unit/"})}),(0,t.jsx)(n.td,{children:"Fast, isolated component testing"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Integration"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"tests/integration/"})}),(0,t.jsx)(n.td,{children:"End-to-end workflows with record-replay"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"testing-philosophy",children:"Testing Philosophy"}),"\n",(0,t.jsx)(n.p,{children:'For unit tests, create minimal mocks and rely more on "fakes". Mocks are too brittle. Tests must be very fast and reliable.'}),"\n",(0,t.jsx)(n.h3,{id:"record-replay-for-integration-tests",children:"Record-Replay for Integration Tests"}),"\n",(0,t.jsx)(n.p,{children:"Testing AI applications end-to-end creates challenges:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"API costs"})," accumulate quickly during development and CI"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Non-deterministic responses"})," make tests unreliable"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Multiple providers"})," require testing the same logic across different APIs"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Our solution: ",(0,t.jsx)(n.strong,{children:"Record real API responses once, replay them for fast, deterministic tests."})]}),"\n",(0,t.jsx)(n.p,{children:"Benefits:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cost control"})," - No repeated API calls during development"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Speed"})," - Instant test execution with cached responses"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reliability"})," - Consistent results regardless of external service state"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Provider coverage"})," - Same tests work across OpenAI, Anthropic, local models, etc."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"running-tests",children:"Running Tests"}),"\n",(0,t.jsxs)(l.A,{children:[(0,t.jsx)(o.default,{value:"unit",label:"Unit Tests",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"uv run --group unit pytest -sv tests/unit/\n"})})}),(0,t.jsxs)(o.default,{value:"integration",label:"Integration Tests",children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Prerequisites:"})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A stack config (various formats supported):","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"server:<config>"})," - auto-start server (e.g., ",(0,t.jsx)(n.code,{children:"server:starter"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"server:<config>:<port>"})," - custom port (e.g., ",(0,t.jsx)(n.code,{children:"server:starter:8322"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"URL pointing to a Llama Stack server"}),"\n",(0,t.jsxs)(n.li,{children:["Distribution name or path to ",(0,t.jsx)(n.code,{children:"run.yaml"})]}),"\n",(0,t.jsx)(n.li,{children:"Comma-separated API=provider pairs"}),"\n"]}),"\n"]}),"\n"]}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Run tests in replay mode:"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"uv run --group test \\\n  pytest -sv tests/integration/ --stack-config=starter\n"})})]}),(0,t.jsxs)(o.default,{value:"recording",label:"Re-recording Tests",children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Local Re-recording (Manual Setup Required):"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'LLAMA_STACK_TEST_INFERENCE_MODE=record \\\n  uv run --group test \\\n  pytest -sv tests/integration/ --stack-config=starter -k "<test name>"\n'})}),(0,t.jsxs)(n.admonition,{title:"CI Compatibility",type:"warning",children:[(0,t.jsx)(n.p,{children:"When re-recording locally, you must match the CI setup:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ollama running with specific models"}),"\n",(0,t.jsxs)(n.li,{children:["Using the ",(0,t.jsx)(n.code,{children:"starter"})," distribution"]}),"\n"]})]}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Remote Re-recording (Recommended):"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Record tests for specific subdirectories\n./scripts/github/schedule-record-workflow.sh --test-subdirs "agents,inference"\n\n# Record with vision tests\n./scripts/github/schedule-record-workflow.sh --test-suite vision\n\n# Record with specific provider\n./scripts/github/schedule-record-workflow.sh --test-subdirs "agents" --test-provider vllm\n'})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Prerequisites:"})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["GitHub CLI: ",(0,t.jsx)(n.code,{children:"brew install gh && gh auth login"})]}),"\n",(0,t.jsxs)(n.li,{children:["jq: ",(0,t.jsx)(n.code,{children:"brew install jq"})]}),"\n",(0,t.jsx)(n.li,{children:"Your branch pushed to a remote"}),"\n"]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"common-development-tasks",children:"Common Development Tasks"}),"\n",(0,t.jsxs)(n.h3,{id:"using-llama-stack-build",children:["Using ",(0,t.jsx)(n.code,{children:"llama stack build"})]}),"\n",(0,t.jsx)(n.p,{children:"Building a stack image uses production packages. For development, set environment variables:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd work/\ngit clone https://github.com/meta-llama/llama-stack.git\ngit clone https://github.com/meta-llama/llama-stack-client-python.git\ncd llama-stack\nLLAMA_STACK_DIR=$(pwd) LLAMA_STACK_CLIENT_DIR=../llama-stack-client-python llama stack build --distro <...>\n"})}),"\n",(0,t.jsx)(n.h3,{id:"updating-configurations",children:"Updating Configurations"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Distribution configurations:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./scripts/distro_codegen.py\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Don't manually edit ",(0,t.jsx)(n.code,{children:"docs/source/.../distributions/"})," files - they're auto-generated."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Provider documentation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./scripts/provider_codegen.py\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Don't manually edit ",(0,t.jsx)(n.code,{children:"docs/source/.../providers/"})," files - they're auto-generated."]}),"\n",(0,t.jsx)(n.h3,{id:"building-documentation",children:"Building Documentation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Rebuild documentation pages\nuv run --group docs make -C docs/ html\n\n# Start local server with auto-rebuild (usually at http://127.0.0.1:8000)\nuv run --group docs sphinx-autobuild docs/source docs/build/html --write-all\n"})}),"\n",(0,t.jsx)(n.h3,{id:"update-api-documentation",children:"Update API Documentation"}),"\n",(0,t.jsx)(n.p,{children:"If you modify API endpoints:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"uv run ./docs/openapi_generator/run_openapi_generator.sh\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Generated documentation will be in ",(0,t.jsx)(n.code,{children:"docs/_static/"}),". Review changes before committing."]}),"\n",(0,t.jsx)(n.h2,{id:"coding-style",children:"Coding Style"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Comments"}),": Provide meaningful insights, avoid filler comments"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Exceptions"}),": Use specific exception types, not broad catch-alls"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error messages"}),': Prefix with "Failed to ..."']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Indentation"}),": 4 spaces, not tabs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"# noqa"})," usage"]}),": Include comment explaining justification"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"# type: ignore"})," usage"]}),": Include comment explaining justification"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Character encoding"}),": ASCII-only preferred"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Provider config"}),": Use Pydantic Field class with ",(0,t.jsx)(n.code,{children:"description"})," field"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Function calls"}),": Use keyword arguments when possible"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Custom exceptions"}),": Use ",(0,t.jsx)(n.a,{href:"llama_stack/apis/common/errors.py",children:"custom Exception classes"})," where applicable"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"legal",children:"Legal"}),"\n",(0,t.jsx)(n.h3,{id:"issues-and-security",children:"Issues and Security"}),"\n",(0,t.jsxs)(n.p,{children:["We use GitHub issues to track public bugs. For security bugs, use Meta's ",(0,t.jsx)(n.a,{href:"http://facebook.com/whitehat/info",children:"bounty program"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"contributor-license-agreement",children:"Contributor License Agreement"}),"\n",(0,t.jsxs)(n.p,{children:["Complete your CLA here: ",(0,t.jsx)(n.a,{href:"https://code.facebook.com/cla",children:"https://code.facebook.com/cla"})]}),"\n",(0,t.jsx)(n.h3,{id:"license",children:"License"}),"\n",(0,t.jsx)(n.p,{children:"By contributing to Llama Stack, you agree that your contributions will be licensed under the LICENSE file in the root directory."}),"\n",(0,t.jsx)(n.h2,{id:"advanced-topics",children:"Advanced Topics"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"./testing-record-replay",children:"Testing Record-Replay System"})})," - Deep dive into testing internals"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"related-resources",children:"Related Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"./new-api-provider",children:"Adding API Providers"})})," - Extend Llama Stack with new providers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"./new-vector-database",children:"Vector Database Integration"})})," - Add vector database support"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/docs/providers/external",children:"External Providers"})})," - External provider development"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://github.com/meta-llama/llama-stack/discussions",children:"GitHub Discussions"})})," - Community discussion"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"https://discord.gg/llama-stack",children:"Discord"})})," - Real-time community chat"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);