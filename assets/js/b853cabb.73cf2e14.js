"use strict";(self.webpackChunkdocusaurus_template_openapi_docs=self.webpackChunkdocusaurus_template_openapi_docs||[]).push([[7661],{16964:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"providers/batches/index","title":"Batches","description":"Available providers for the batches API","source":"@site/docs/providers/batches/index.mdx","sourceDirName":"providers/batches","slug":"/providers/batches/","permalink":"/llama-stack/docs/providers/batches/","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-llama/llama-stack/tree/main/docs/docs/providers/batches/index.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"description":"Available providers for the batches API","sidebar_label":"Overview","sidebar_position":1,"title":"Batches"},"sidebar":"tutorialSidebar","previous":{"title":"Meta Reference","permalink":"/llama-stack/docs/providers/telemetry/inline_meta-reference"},"next":{"title":"Reference","permalink":"/llama-stack/docs/providers/batches/inline_reference"}}');var t=r(74848),i=r(28453);const a={description:"Available providers for the batches API",sidebar_label:"Overview",sidebar_position:1,title:"Batches"},o="Batches",c={},l=[{value:"Overview",id:"overview",level:2},{value:"Providers",id:"providers",level:2}];function d(e){const s={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"batches",children:"Batches"})}),"\n",(0,t.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(s.p,{children:"The Batches API enables efficient processing of multiple requests in a single operation,\nparticularly useful for processing large datasets, batch evaluation workflows, and\ncost-effective inference at scale."}),"\n",(0,t.jsx)(s.p,{children:"The API is designed to allow use of openai client libraries for seamless integration."}),"\n",(0,t.jsx)(s.p,{children:"This API provides the following extensions:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"idempotent batch creation"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Note: This API is currently under active development and may undergo changes."}),"\n",(0,t.jsxs)(s.p,{children:["This section contains documentation for all available providers for the ",(0,t.jsx)(s.strong,{children:"batches"})," API."]}),"\n",(0,t.jsx)(s.h2,{id:"providers",children:"Providers"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"./inline_reference",children:"Reference"})})," - Inline provider"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>a,x:()=>o});var n=r(96540);const t={},i=n.createContext(t);function a(e){const s=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);