"use strict";(self.webpackChunkdocusaurus_template_openapi_docs=self.webpackChunkdocusaurus_template_openapi_docs||[]).push([[5290],{3489:(e,t,n)=>{n.r(t),n.d(t,{Collapsible:()=>c.N,DraftBannerMessage:()=>M.TT,DraftBannerTitle:()=>M.Yh,ErrorBoundaryError:()=>w.bq,ErrorBoundaryErrorMessageFallback:()=>w.MN,ErrorBoundaryTryAgainButton:()=>w.a2,ErrorCauseBoundary:()=>w.k2,HtmlClassNameProvider:()=>f.e3,NavbarSecondaryMenuFiller:()=>h.GX,PageMetadata:()=>f.be,ReactContextError:()=>m.dV,SkipToContentFallbackId:()=>I.j,SkipToContentLink:()=>I.K,ThemeClassNames:()=>d.G,ThemedComponent:()=>o.A,UnlistedBannerMessage:()=>M.Uh,UnlistedBannerTitle:()=>M.Rc,UnlistedMetadata:()=>M.AE,composeProviders:()=>m.fM,createStorageSlot:()=>a.Wf,duplicates:()=>v.XI,filterDocCardListItems:()=>F,groupBy:()=>v.$z,isMultiColumnFooterLinks:()=>S.C,isRegexpStringMatch:()=>j.G,listStorageKeys:()=>a.Eo,listTagsByLetters:()=>b.Q,prefersReducedMotion:()=>u.O,processAdmonitionProps:()=>P.c,translateTagsPageTitle:()=>b.b,uniq:()=>v.sb,useClearQueryString:()=>C.W9,useCollapsible:()=>c.u,useColorMode:()=>p.G,useContextualSearchFilters:()=>N,useCurrentSidebarCategory:()=>E,useDocsPreferredVersion:()=>L,useEvent:()=>m._q,useHistorySelector:()=>C.Hl,usePluralForm:()=>l.W,usePrevious:()=>m.ZC,usePrismTheme:()=>A.A,useQueryString:()=>C.l,useQueryStringList:()=>C.fV,useSearchLinkCreator:()=>k,useSearchQueryString:()=>T,useStorageSlot:()=>a.Dv,useThemeConfig:()=>s.p,useWindowSize:()=>g.l});var r=n(40797),i=n(89396),s=n(53115),o=n(68283),a=n(78749),l=n(81430),c=n(33535),d=n(204),u=n(84924),m=n(26849),f=n(59144),p=n(8532),h=n(63065),g=n(86682),b=n(53523),x=n(96540),C=n(30604);const y="q";function T(){return(0,C.l)(y)}function k(){const{siteConfig:{baseUrl:e,themeConfig:t}}=(0,r.default)(),{algolia:{searchPagePath:n}}=t;return(0,x.useCallback)(t=>`${e}${n}?${y}=${encodeURIComponent(t)}`,[e,n])}var S=n(63113),j=n(26767),v=n(11861),A=n(31177),P=n(60506),I=n(19585),M=n(27289),w=n(24194);function E(...e){return n(56942).useCurrentSidebarCategory(...e)}function F(...e){return n(56942).filterDocCardListItems(...e)}function L(...e){return n(56942).useDocsPreferredVersion(...e)}function N(){const{i18n:e}=(0,r.default)(),t=n(56942).useDocsContextualSearchTags(),s=[i.C,...t];return{locale:e.currentLocale,tags:s}}},27289:(e,t,n)=>{n.d(t,{AE:()=>l,Rc:()=>o,TT:()=>d,Uh:()=>a,Yh:()=>c});n(96540);var r=n(50539),i=n(27143),s=n(74848);function o(){return(0,s.jsx)(r.default,{id:"theme.contentVisibility.unlistedBanner.title",description:"The unlisted content banner title",children:"Unlisted page"})}function a(){return(0,s.jsx)(r.default,{id:"theme.contentVisibility.unlistedBanner.message",description:"The unlisted content banner message",children:"This page is unlisted. Search engines will not index it, and only users having a direct link can access it."})}function l(){return(0,s.jsx)(i.A,{children:(0,s.jsx)("meta",{name:"robots",content:"noindex, nofollow"})})}function c(){return(0,s.jsx)(r.default,{id:"theme.contentVisibility.draftBanner.title",description:"The draft content banner title",children:"Draft page"})}function d(){return(0,s.jsx)(r.default,{id:"theme.contentVisibility.draftBanner.message",description:"The draft content banner message",children:"This page is a draft. It will only be visible in dev and be excluded from the production build."})}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var r=n(96540);const i={},s=r.createContext(i);function o(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:t},e.children)}},31177:(e,t,n)=>{n.d(t,{A:()=>s});var r=n(8532),i=n(53115);function s(){const{prism:e}=(0,i.p)(),{colorMode:t}=(0,r.G)(),n=e.theme,s=e.darkTheme||n;return"dark"===t?s:n}},53523:(e,t,n)=>{n.d(t,{Q:()=>s,b:()=>i});var r=n(50539);const i=()=>(0,r.translate)({id:"theme.tags.tagsPageTitle",message:"Tags",description:"The title of the tag list page"});function s(e){const t={};return Object.values(e).forEach(e=>{const n=function(e){return e[0].toUpperCase()}(e.label);t[n]??=[],t[n].push(e)}),Object.entries(t).sort(([e],[t])=>e.localeCompare(t)).map(([e,t])=>({letter:e,tags:t.sort((e,t)=>e.label.localeCompare(t.label))}))}},60506:(e,t,n)=>{n.d(t,{c:()=>s});var r=n(96540),i=n(74848);function s(e){const{mdxAdmonitionTitle:t,rest:n}=function(e){const t=r.Children.toArray(e),n=t.find(e=>r.isValidElement(e)&&"mdxAdmonitionTitle"===e.type),s=t.filter(e=>e!==n),o=n?.props.children;return{mdxAdmonitionTitle:o,rest:s.length>0?(0,i.jsx)(i.Fragment,{children:s}):null}}(e.children),s=e.title??t;return{...e,...s&&{title:s},children:n}}},81430:(e,t,n)=>{n.d(t,{W:()=>c});var r=n(96540),i=n(40797);const s=["zero","one","two","few","many","other"];function o(e){return s.filter(t=>e.includes(t))}const a={locale:"en",pluralForms:o(["one","other"]),select:e=>1===e?"one":"other"};function l(){const{i18n:{currentLocale:e}}=(0,i.default)();return(0,r.useMemo)(()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:o(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),a}},[e])}function c(){const e=l();return{selectMessage:(t,n)=>function(e,t,n){const r=e.split("|");if(1===r.length)return r[0];r.length>n.pluralForms.length&&console.error(`For locale=${n.locale}, a maximum of ${n.pluralForms.length} plural forms are expected (${n.pluralForms.join(",")}), but the message contains ${r.length}: ${e}`);const i=n.select(t),s=n.pluralForms.indexOf(i);return r[Math.min(s,r.length-1)]}(n,t,e)}}},99e3:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>f,frontMatter:()=>l,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"api/inference","title":"Llama Stack Inference API for generating completions, chat completions, and embeddings.","description":"Llama Stack Inference API for generating completions, chat completions, and embeddings.","source":"@site/docs/api/inference.tag.mdx","sourceDirName":"api","slug":"/api/inference","permalink":"/llama-stack/docs/api/inference","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"inference","title":"Llama Stack Inference API for generating completions, chat completions, and embeddings.","description":"Llama Stack Inference API for generating completions, chat completions, and embeddings.","custom_edit_url":null},"sidebar":"apiSidebar","previous":{"title":"Returns the contents of the specified file.","permalink":"/llama-stack/docs/api/openai-retrieve-file-content"},"next":{"title":"Generate chat completions for a batch of messages using the specified model.","permalink":"/llama-stack/docs/api/batch-chat-completion"}}');var i=n(74848),s=n(28453),o=n(99563),a=n(3489);const l={id:"inference",title:"Llama Stack Inference API for generating completions, chat completions, and embeddings.",description:"Llama Stack Inference API for generating completions, chat completions, and embeddings.",custom_edit_url:null},c=void 0,d={},u=[];function m(e){const t={li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"This API provides the raw interface to the underlying models. Two kinds of models are supported:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:'LLM models: these models generate "raw" and "chat" (conversational) completions.'}),"\n",(0,i.jsx)(t.li,{children:"Embedding models: these models generate embeddings to be used for semantic search."}),"\n"]}),"\n","\n",(0,i.jsx)(o.A,{items:(0,a.useCurrentSidebarCategory)().items})]})}function f(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},99563:(e,t,n)=>{n.d(t,{A:()=>x});n(96540);var r=n(34164),i=n(93751),s=n(56289),o=n(81430),a=n(22887),l=n(50539),c=n(9303);const d={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var u=n(74848);function m({href:e,children:t}){return(0,u.jsx)(s.default,{href:e,className:(0,r.A)("card padding--lg",d.cardContainer),children:t})}function f({href:e,icon:t,title:n,description:i}){return(0,u.jsxs)(m,{href:e,children:[(0,u.jsxs)(c.default,{as:"h2",className:(0,r.A)("text--truncate",d.cardTitle),title:n,children:[t," ",n]}),i&&(0,u.jsx)("p",{className:(0,r.A)("text--truncate",d.cardDescription),title:i,children:i})]})}function p({item:e}){const t=(0,i.Nr)(e),n=function(){const{selectMessage:e}=(0,o.W)();return t=>e(t,(0,l.translate)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return t?(0,u.jsx)(f,{href:t,icon:"\ud83d\uddc3\ufe0f",title:e.label,description:e.description??n(e.items.length)}):null}function h({item:e}){const t=(0,a.A)(e.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",n=(0,i.cC)(e.docId??void 0);return(0,u.jsx)(f,{href:e.href,icon:t,title:e.label,description:e.description??n?.description})}function g({item:e}){switch(e.type){case"link":return(0,u.jsx)(h,{item:e});case"category":return(0,u.jsx)(p,{item:e});default:throw new Error(`unknown item type ${JSON.stringify(e)}`)}}function b({className:e}){const t=(0,i.$S)();return(0,u.jsx)(x,{items:t.items,className:e})}function x(e){const{items:t,className:n}=e;if(!t)return(0,u.jsx)(b,{...e});const s=(0,i.d1)(t);return(0,u.jsx)("section",{className:(0,r.A)("row",n),children:s.map((e,t)=>(0,u.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,u.jsx)(g,{item:e})},t))})}}}]);