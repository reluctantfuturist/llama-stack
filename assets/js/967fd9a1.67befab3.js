"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6122],{22221:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>f,contentTitle:()=>g,default:()=>k,frontMatter:()=>h,metadata:()=>r,toc:()=>b});const r=JSON.parse('{"id":"api/query-chunks","title":"Query chunks from a vector database.","description":"Query chunks from a vector database.","source":"@site/docs/api/query-chunks.api.mdx","sourceDirName":"api","slug":"/api/query-chunks","permalink":"/llama-stack/docs/api/query-chunks","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"query-chunks","title":"Query chunks from a vector database.","description":"Query chunks from a vector database.","sidebar_label":"Query chunks from a vector database.","hide_title":true,"hide_table_of_contents":true,"api":"eJztXG1v3DYS/iuEvtwVWK/ToL22vk9uksMZSGKf4xxwSAyXK3FXrClSJand7C32v3dmqBdqX7zrpijiQPmQ2BI5M3w488xoSGSVWOFKo51wydkqef7sGf6TCZdaWXppdHKWnLP/VMIuX+SVvnfX9fBxMkpSo73QHmfwslQy5Tjj9FeH01aJS3NRcPzJL0sBgszkV5F6mFhaUwrrZVCakuBoHLeWL2GY9KJwR8zvzDBaXE6Tsw/tFOet1LNkPdrxbo+48HZTAq3WgZJEFnwm4PdMTHml+k9i2F5K/K2QmntjGUpjZsp8LlhtMMP1jdm5WvClYx+DmI8JGFtLPLjyyqpd2/X++nWjigQx0J9xz+mF1PRiamzBPQ7DN2c07nSF6tb/nHAn/vHdaIVv1mP21ngBc2A0zk9NpTKW87lgSuiZz5mCRXqHDnHIWrkL1771N2AbqgmvWWmk9viDN2Q2eKupbCqSNaDEs0ziNK6uIkVTrpwYgV//VkkrMthx0nwL5kmvUDXIR5BxeXs2GrfnlU5Nhk/OkgDIlq3hMRM4UGQ11gQ0d6zxvEN29kVekAyYztmG9BoQ2EquGa3gMQjQGhu/iqAgfS/Cgi/AHbfWeF4vK/ZZCqfPCyIvPvleDLUPPiuEUEqIIJJ32NtgVCPrDwFKaiI8UeDDcPpIZY0mzM/ilaLdNZzLt7xAubW6AniWXHJ1LEUMbDaw2cBmB9hsky0GUvt8UkPF7b7AC6sERFkWy4nSyFbJN1RrA78N/DZUa18esQ3V2sBmA5sN1dpXRWrHVGvr24fG7IymRkkDGXb6RmyRyzRnKfjSBFiik0SGjcKmuxG6m4FZAXWIcTCxEJ5vhE67+7tx21FJ6kqpOClOjAH9On6kq2IibPwkaiT2Stbt5Lq+XW9C8aY2G4LLmVRyD2tdSKCvFpTAcQupFGJSOQzpQJYFRKAKQMKuZRVFotRTYSE6BaEiwNgsqzPNgR5qu7INEy/LgB1rhSFNdwaO2cWUaeMZBNlcAinAPnUGp6YoK1yVgrVZMspBvIjsjibfyew49g1YXLwMcEhkMpTSYDEHfOt8ggw1Zu8RKLRzwtN7oeHnSqdhIdIvyY5gQOw4e/amt9xoP95e3mzuyd7dYLiIX/oqf8F1NHG7z9BD+etxMAKAccS1e+eE723bTGhhyRsRzoyZsLzMpFWBYQtyONhaRzHB2bz7A7a0Yn0OiASYJ0IZPXOQYoPThAR7lOAwdoONR8xVwC2UxCBRjdhUKsFK7vOIT8B9IbFPZe2pqRWIwZ2XhXCeF2WkH9lpBvGyRaKamSZi2nngCBkdgoBPLHKhI3dagEW1HtJZldlfolNx51mtLAqHBcwyi+NwDmMfonAKDSiSZtZUJbi6IpcKxzrwfCYQ9Ui7NxAC8v/CHmdAO7xVFJCMHfxlyOIYajfynmZECltOuyM2PU5tR4SBgvcp/5vrhu7UmcFeaSfDodiBPUbF7fgG886SmgD7zEw6g/sHaO+gTtb+SG0hIZAqnOt6HLeRuns5+E/U1YjcVHaoGmqqETqabIj8cUVU2lYvbYq43RC8o4IKAQbWNihRumgrGgcKKVuAu/CtrLWdfF9L52NpdehY4SurMcNZUxAwv+FBLBFlCnnxmDPTffn+Wigx55CzWBAFum04Cs7qTx7BIcJbE8ikR0IbznVbYyNcdxwob6HcvAirp5WjZTU24Dm7kKVC9rtdp9g39AUHYgBqZEap55B7M8wKBVf4SQpW/2ln2sDNvnJHhMW/b26uWBjN8GMr6QrxQyT1ylrkARw8AjBcbiyk+KoouF221EFjAlvLsGgrObjYNHzMhfekh1zEc3kEPQbNYTSqxhwOcZ1XBdcnQI8Zn0DWjeb0zKEmA3yDofcd1vX3pjL9hoXuws7UA35qpZhjuWwxAkOLATXziak8KXelSCHrp8ykaWWpYNuw6zHeXe9ws1steJGXE0x7wLM970Ybzq8uxuzaVLNcLWF7lDILx67/9YL98OOzH0Kd/wkSfvCMxr/A1Tt9P/OMXQcX7+w50vPryHn+0+7ISZVEYsqxuUB8ZwxM1stGcB2QMzmHEoQXmBMIW0hlQ1ANQfXEgur5T1E7BTz9DXp6HVkuDq3/mSq0I8WnVAhslVGjEOtD6kyO2ZUSkJmYB+/hMw5B0nwhU7x9vy9TQQUxh83HBlyFDRKQDHtTafEJ8MbaQtQwDKE1hNYTCq3v43xFTUT8mn0XvL3TX4fX+bbLN2BkY3ZZgScIXlBWmghIPNrQZ33WhFfb2906p3hA8BBUQ1A9raB6tkvbESFEUYKuxmcOV/Nf+py6uETz++bS91rz6UXG7vj4GiWIFQF+Aegk9Ml2134Fltxy+MYWFnXdBhwhn/5ssuXGLd7Piblg1V02ObpB2XUDG0fYWBm6Fq2F8A+f4MNd4+G8dzjvHW6vPLmD3uH2ysBmA5sNt1e+KlIb7hoP/Dbw25fBbwOxDdXawGYDm30dbDZUa0/mrjE15jB+nOA2zTHyqWFHfced/43AF3xjGBfUNUwbN2i6kI/ZuV5DtGlf7ruKE+4O0A51MrytRLj3lRvs65aG7hfgpUr47XT+7WnQcSLNaRA/SsL5pSMQib2T3Pvy7PSU6+VJDgJEdqIUL/iJ8zy9H6cmZDsnUiAxv6SJL5tw+XCL77AVfN01jV91jfB+07fz/rpX2z1ofWFNxw9TQ25RI/Ea7WHv0B72rj4moCY0TMTFhJ2Zf7vD+/BUxfXOF3h84hFLpgRTX6J2HzXb+MPxki7OEzqjpODoCi5IkXbjjhbdnJ/yVLgglFvxUWPbn65Me7MtfIJXQJSAxSDVBave4OXGcLseN7bg1G7Xobg4su/fgyNq5R87vw4H5IrTUnGp6YpsSPrBzT4E3FtHiz0Z3QlHrFYo771V6zU+rjcfjxrovGuCm/wBQy0XPMPLp+Bi9wL9o6aVk5vAcnOuKorXzXMIDN0w4zxNRekfHHsbhczV5bsbGDypzzrwQik8tXwBD/Hvs4ROT3A2MRA9WyWK61lFFVISZOKf3wGUO2Qw","sidebar_class_name":"post api-method","info_path":"docs/api/llama-stack-specification","custom_edit_url":null},"sidebar":"apiSidebar","previous":{"title":"Search for chunks in a vector store.","permalink":"/llama-stack/docs/api/openai-search-vector-store"}}');var n=i(74848),o=i(28453),a=i(57742),s=i.n(a),p=i(78178),d=i.n(p),c=i(19624),m=i.n(c),l=i(96226),u=i.n(l),y=(i(77675),i(19365),i(51107));const h={id:"query-chunks",title:"Query chunks from a vector database.",description:"Query chunks from a vector database.",sidebar_label:"Query chunks from a vector database.",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/api/llama-stack-specification",custom_edit_url:null},g=void 0,f={},b=[];function x(e){const t={p:"p",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(y.default,{as:"h1",className:"openapi__heading",children:"Query chunks from a vector database."}),"\n",(0,n.jsx)(s(),{method:"post",path:"/v1/vector-io/query",context:"endpoint"}),"\n",(0,n.jsx)(t.p,{children:"Query chunks from a vector database."}),"\n",(0,n.jsx)(y.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,n.jsx)(d(),{parameters:[]}),"\n",(0,n.jsx)(m(),{title:"Body",body:{content:{"application/json":{schema:{type:"object",properties:{vector_db_id:{type:"string",description:"The identifier of the vector database to query."},query:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The query to search for."},params:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"The parameters of the query."}},additionalProperties:!1,required:["vector_db_id","query"],title:"QueryChunksRequest"}}},required:!0}}),"\n",(0,n.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"A QueryChunksResponse.",content:{"application/json":{schema:{type:"object",properties:{chunks:{type:"array",items:{type:"object",properties:{content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The content of the chunk, which can be interleaved text, images, or other types."},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"Metadata associated with the chunk that will be used in the model context during inference."},embedding:{type:"array",items:{type:"number"},description:"Optional embedding for the chunk. If not provided, it will be computed later."},stored_chunk_id:{type:"string",description:"The chunk ID that is stored in the vector database. Used for backend functionality."},chunk_metadata:{description:"Metadata for the chunk that will NOT be used in the context during inference. The `chunk_metadata` is required backend functionality.",type:"object",properties:{chunk_id:{type:"string",description:"The ID of the chunk. If not set, it will be generated based on the document ID and content."},document_id:{type:"string",description:"The ID of the document this chunk belongs to."},source:{type:"string",description:"The source of the content, such as a URL, file path, or other identifier."},created_timestamp:{type:"integer",description:"An optional timestamp indicating when the chunk was created."},updated_timestamp:{type:"integer",description:"An optional timestamp indicating when the chunk was last updated."},chunk_window:{type:"string",description:"The window of the chunk, which can be used to group related chunks together."},chunk_tokenizer:{type:"string",description:"The tokenizer used to create the chunk. Default is Tiktoken."},chunk_embedding_model:{type:"string",description:"The embedding model used to create the chunk's embedding."},chunk_embedding_dimension:{type:"integer",description:"The dimension of the embedding vector for the chunk."},content_token_count:{type:"integer",description:"The number of tokens in the content of the chunk."},metadata_token_count:{type:"integer",description:"The number of tokens in the metadata of the chunk."}},additionalProperties:!1,title:"ChunkMetadata"}},additionalProperties:!1,required:["content","metadata"],title:"Chunk",description:"A chunk of content that can be inserted into a vector database."},description:"List of content chunks returned from the query"},scores:{type:"array",items:{type:"number"},description:"Relevance scores corresponding to each returned chunk"}},additionalProperties:!1,required:["chunks","scores"],title:"QueryChunksResponse",description:"Response from querying chunks in a vector database."}}}},400:{description:"The request was invalid or malformed",content:{"application/json":{schema:{type:"object",properties:{status:{type:"integer",description:"HTTP status code"},title:{type:"string",description:"Error title, a short summary of the error which is invariant for an error type"},detail:{type:"string",description:"Error detail, a longer human-readable description of the error"},instance:{type:"string",description:"(Optional) A URL which can be used to retrieve more information about the specific occurrence of the error"}},additionalProperties:!1,required:["status","title","detail"],title:"Error",description:"Error response from the API. Roughly follows RFC 7807."},example:{status:400,title:"Bad Request",detail:"The request was invalid or malformed"}}}},429:{description:"The client has sent too many requests in a given amount of time",content:{"application/json":{schema:{type:"object",properties:{status:{type:"integer",description:"HTTP status code"},title:{type:"string",description:"Error title, a short summary of the error which is invariant for an error type"},detail:{type:"string",description:"Error detail, a longer human-readable description of the error"},instance:{type:"string",description:"(Optional) A URL which can be used to retrieve more information about the specific occurrence of the error"}},additionalProperties:!1,required:["status","title","detail"],title:"Error",description:"Error response from the API. Roughly follows RFC 7807."},example:{status:429,title:"Too Many Requests",detail:"You have exceeded the rate limit. Please try again later."}}}},500:{description:"The server encountered an unexpected error",content:{"application/json":{schema:{type:"object",properties:{status:{type:"integer",description:"HTTP status code"},title:{type:"string",description:"Error title, a short summary of the error which is invariant for an error type"},detail:{type:"string",description:"Error detail, a longer human-readable description of the error"},instance:{type:"string",description:"(Optional) A URL which can be used to retrieve more information about the specific occurrence of the error"}},additionalProperties:!1,required:["status","title","detail"],title:"Error",description:"Error response from the API. Roughly follows RFC 7807."},example:{status:500,title:"Internal Server Error",detail:"An unexpected error occurred. Our team has been notified."}}}},default:{description:"An unexpected error occurred",content:{"application/json":{schema:{type:"object",properties:{status:{type:"integer",description:"HTTP status code"},title:{type:"string",description:"Error title, a short summary of the error which is invariant for an error type"},detail:{type:"string",description:"Error detail, a longer human-readable description of the error"},instance:{type:"string",description:"(Optional) A URL which can be used to retrieve more information about the specific occurrence of the error"}},additionalProperties:!1,required:["status","title","detail"],title:"Error",description:"Error response from the API. Roughly follows RFC 7807."},example:{status:0,title:"Error",detail:"An unexpected error occurred"}}}}}})]})}function k(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(x,{...e})}):x(e)}}}]);