"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9946],{30825:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>f,contentTitle:()=>b,default:()=>v,frontMatter:()=>m,metadata:()=>r,toc:()=>g});const r=JSON.parse('{"id":"api/get-span-tree","title":"Get a span tree by its ID.","description":"Get a span tree by its ID.","source":"@site/docs/api/get-span-tree.api.mdx","sourceDirName":"api","slug":"/api/get-span-tree","permalink":"/docs/api/get-span-tree","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-span-tree","title":"Get a span tree by its ID.","description":"Get a span tree by its ID.","sidebar_label":"Get a span tree by its ID.","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/api/llama-stack-specification","custom_edit_url":null},"sidebar":"apiSidebar","previous":{"title":"Get a span by its ID.","permalink":"/docs/api/get-span"},"next":{"title":"Get a trace by its ID.","permalink":"/docs/api/get-trace"}}');var s=i(74848),a=i(28453),n=i(57742),o=i.n(n),p=i(78178),c=i.n(p),d=i(19624),l=i.n(d),u=i(96226),y=i.n(u),h=(i(77675),i(19365),i(51107));const m={id:"get-span-tree",title:"Get a span tree by its ID.",description:"Get a span tree by its ID.",sidebar_label:"Get a span tree by its ID.",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/api/llama-stack-specification",custom_edit_url:null},b=void 0,f={},g=[];function R(e){const t={p:"p",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"Get a span tree by its ID."}),"\n",(0,s.jsx)(o(),{method:"post",path:"/v1/telemetry/spans/{span_id}/tree",context:"endpoint"}),"\n",(0,s.jsx)(t.p,{children:"Get a span tree by its ID."}),"\n",(0,s.jsx)(h.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,s.jsx)(c(),{parameters:[{name:"span_id",in:"path",description:"The ID of the span to get the tree from.",required:!0,schema:{type:"string"}}]}),"\n",(0,s.jsx)(l(),{title:"Body",body:{content:{"application/json":{schema:{type:"object",properties:{attributes_to_return:{type:"array",items:{type:"string"},description:"The attributes to return in the tree."},max_depth:{type:"integer",description:"The maximum depth of the tree."}},additionalProperties:!1,title:"GetSpanTreeRequest"}}},required:!0}}),"\n",(0,s.jsx)(y(),{id:void 0,label:void 0,responses:{200:{description:"A QuerySpanTreeResponse.",content:{"application/json":{schema:{type:"object",properties:{data:{type:"object",additionalProperties:{type:"object",properties:{span_id:{type:"string",description:"Unique identifier for the span"},trace_id:{type:"string",description:"Unique identifier for the trace this span belongs to"},parent_span_id:{type:"string",description:"(Optional) Unique identifier for the parent span, if this is a child span"},name:{type:"string",description:"Human-readable name describing the operation this span represents"},start_time:{type:"string",format:"date-time",description:"Timestamp when the operation began"},end_time:{type:"string",format:"date-time",description:"(Optional) Timestamp when the operation finished, if completed"},attributes:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"(Optional) Key-value pairs containing additional metadata about the span"},status:{description:"(Optional) The current status of the span",type:"string",enum:["ok","error"],title:"SpanStatus"}},additionalProperties:!1,required:["span_id","trace_id","name","start_time"],title:"SpanWithStatus",description:"A span that includes status information."},description:"Dictionary mapping span IDs to spans with status information"}},additionalProperties:!1,required:["data"],title:"QuerySpanTreeResponse",description:"Response containing a tree structure of spans."}}}},400:{description:"The request was invalid or malformed",content:{"application/json":{schema:{type:"object",properties:{status:{type:"integer",description:"HTTP status code"},title:{type:"string",description:"Error title, a short summary of the error which is invariant for an error type"},detail:{type:"string",description:"Error detail, a longer human-readable description of the error"},instance:{type:"string",description:"(Optional) A URL which can be used to retrieve more information about the specific occurrence of the error"}},additionalProperties:!1,required:["status","title","detail"],title:"Error",description:"Error response from the API. Roughly follows RFC 7807."},example:{status:400,title:"Bad Request",detail:"The request was invalid or malformed"}}}},429:{description:"The client has sent too many requests in a given amount of time",content:{"application/json":{schema:{type:"object",properties:{status:{type:"integer",description:"HTTP status code"},title:{type:"string",description:"Error title, a short summary of the error which is invariant for an error type"},detail:{type:"string",description:"Error detail, a longer human-readable description of the error"},instance:{type:"string",description:"(Optional) A URL which can be used to retrieve more information about the specific occurrence of the error"}},additionalProperties:!1,required:["status","title","detail"],title:"Error",description:"Error response from the API. Roughly follows RFC 7807."},example:{status:429,title:"Too Many Requests",detail:"You have exceeded the rate limit. Please try again later."}}}},500:{description:"The server encountered an unexpected error",content:{"application/json":{schema:{type:"object",properties:{status:{type:"integer",description:"HTTP status code"},title:{type:"string",description:"Error title, a short summary of the error which is invariant for an error type"},detail:{type:"string",description:"Error detail, a longer human-readable description of the error"},instance:{type:"string",description:"(Optional) A URL which can be used to retrieve more information about the specific occurrence of the error"}},additionalProperties:!1,required:["status","title","detail"],title:"Error",description:"Error response from the API. Roughly follows RFC 7807."},example:{status:500,title:"Internal Server Error",detail:"An unexpected error occurred. Our team has been notified."}}}},default:{description:"An unexpected error occurred",content:{"application/json":{schema:{type:"object",properties:{status:{type:"integer",description:"HTTP status code"},title:{type:"string",description:"Error title, a short summary of the error which is invariant for an error type"},detail:{type:"string",description:"Error detail, a longer human-readable description of the error"},instance:{type:"string",description:"(Optional) A URL which can be used to retrieve more information about the specific occurrence of the error"}},additionalProperties:!1,required:["status","title","detail"],title:"Error",description:"Error response from the API. Roughly follows RFC 7807."},example:{status:0,title:"Error",detail:"An unexpected error occurred"}}}}}})]})}function v(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(R,{...e})}):R(e)}}}]);