"use strict";(self.webpackChunkdocusaurus_template_openapi_docs=self.webpackChunkdocusaurus_template_openapi_docs||[]).push([[2066],{28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var t=i(96540);const r={},o=t.createContext(r);function s(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(o.Provider,{value:n},e.children)}},73153:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"providers/vector_io/remote_milvus","title":"remote::milvus","description":"[Milvus](https://milvus","source":"@site/docs/providers/vector_io/remote_milvus.mdx","sourceDirName":"providers/vector_io","slug":"/providers/vector_io/remote_milvus","permalink":"/llama-stack/docs/providers/vector_io/remote_milvus","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-llama/llama-stack/tree/main/docs/docs/providers/vector_io/remote_milvus.mdx","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"description":"[Milvus](https://milvus","sidebar_label":"Milvus","sidebar_position":10,"title":"remote::milvus"},"sidebar":"tutorialSidebar","previous":{"title":"Chromadb","permalink":"/llama-stack/docs/providers/vector_io/remote_chromadb"},"next":{"title":"Pgvector","permalink":"/llama-stack/docs/providers/vector_io/remote_pgvector"}}');var r=i(74848),o=i(28453);const s={description:"[Milvus](https://milvus",sidebar_label:"Milvus",sidebar_position:10,title:"remote::milvus"},l="remote::milvus",a={},c=[{value:"Description",id:"description",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Inline (Local) Configuration",id:"inline-local-configuration",level:3},{value:"Remote Configuration",id:"remote-configuration",level:3},{value:"Standard Remote Connection",id:"standard-remote-connection",level:4},{value:"TLS-Enabled Remote Connection (One-way TLS)",id:"tls-enabled-remote-connection-one-way-tls",level:4},{value:"Mutual TLS (mTLS) Remote Connection",id:"mutual-tls-mtls-remote-connection",level:4},{value:"Key Parameters for TLS Configuration",id:"key-parameters-for-tls-configuration",level:4},{value:"Sample Configuration",id:"sample-configuration",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"remotemilvus",children:"remote::milvus"})}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://milvus.io/",children:"Milvus"})," is an inline and remote vector database provider for Llama Stack. It\nallows you to store and query vectors directly within a Milvus database.\nThat means you're not limited to storing vectors in memory or in a separate service."]}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.p,{children:"In Llama Stack, Milvus can be configured in two ways:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Inline (Local) Configuration"})," - Uses Milvus-Lite for local storage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Remote Configuration"})," - Connects to a remote Milvus server"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"inline-local-configuration",children:"Inline (Local) Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["The simplest method is local configuration, which requires setting ",(0,r.jsx)(n.code,{children:"db_path"}),", a path for locally storing Milvus-Lite files:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"vector_io:\n  - provider_id: milvus\n    provider_type: inline::milvus\n    config:\n      db_path: ~/.llama/distributions/together/milvus_store.db\n"})}),"\n",(0,r.jsx)(n.h3,{id:"remote-configuration",children:"Remote Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Remote configuration is suitable for larger data storage requirements:"}),"\n",(0,r.jsx)(n.h4,{id:"standard-remote-connection",children:"Standard Remote Connection"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'vector_io:\n  - provider_id: milvus\n    provider_type: remote::milvus\n    config:\n      uri: "http://<host>:<port>"\n      token: "<user>:<password>"\n'})}),"\n",(0,r.jsx)(n.h4,{id:"tls-enabled-remote-connection-one-way-tls",children:"TLS-Enabled Remote Connection (One-way TLS)"}),"\n",(0,r.jsx)(n.p,{children:"For connections to Milvus instances with one-way TLS enabled:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'vector_io:\n  - provider_id: milvus\n    provider_type: remote::milvus\n    config:\n      uri: "https://<host>:<port>"\n      token: "<user>:<password>"\n      secure: True\n      server_pem_path: "/path/to/server.pem"\n'})}),"\n",(0,r.jsx)(n.h4,{id:"mutual-tls-mtls-remote-connection",children:"Mutual TLS (mTLS) Remote Connection"}),"\n",(0,r.jsx)(n.p,{children:"For connections to Milvus instances with mutual TLS (mTLS) enabled:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'vector_io:\n  - provider_id: milvus\n    provider_type: remote::milvus\n    config:\n      uri: "https://<host>:<port>"\n      token: "<user>:<password>"\n      secure: True\n      ca_pem_path: "/path/to/ca.pem"\n      client_pem_path: "/path/to/client.pem"\n      client_key_path: "/path/to/client.key"\n'})}),"\n",(0,r.jsx)(n.h4,{id:"key-parameters-for-tls-configuration",children:"Key Parameters for TLS Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"secure"})}),": Enables TLS encryption when set to ",(0,r.jsx)(n.code,{children:"true"}),". Defaults to ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"server_pem_path"})}),": Path to the ",(0,r.jsx)(n.strong,{children:"server certificate"})," for verifying the server's identity (used in one-way TLS)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"ca_pem_path"})}),": Path to the ",(0,r.jsx)(n.strong,{children:"Certificate Authority (CA) certificate"})," for validating the server certificate (required in mTLS)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"client_pem_path"})}),": Path to the ",(0,r.jsx)(n.strong,{children:"client certificate"})," file (required for mTLS)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"client_key_path"})}),": Path to the ",(0,r.jsx)(n.strong,{children:"client private key"})," file (required for mTLS)."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"sample-configuration",children:"Sample Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"uri: ${env.MILVUS_ENDPOINT}\ntoken: ${env.MILVUS_TOKEN}\nkvstore:\n  type: sqlite\n  db_path: ${env.SQLITE_STORE_DIR:=~/.llama/dummy}/milvus_remote_registry.db\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);