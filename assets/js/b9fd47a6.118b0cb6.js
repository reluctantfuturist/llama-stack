"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6368],{49562:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"providers/telemetry/inline_meta-reference","title":"inline::meta-reference","description":"Meta\'s reference implementation of telemetry and observability using OpenTelemetry","source":"@site/docs/providers/telemetry/inline_meta-reference.mdx","sourceDirName":"providers/telemetry","slug":"/providers/telemetry/inline_meta-reference","permalink":"/docs/providers/telemetry/inline_meta-reference","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-llama/llama-stack/tree/main/docs/docs/providers/telemetry/inline_meta-reference.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"description":"Meta\'s reference implementation of telemetry and observability using OpenTelemetry","sidebar_label":"Meta Reference","sidebar_position":2,"title":"inline::meta-reference"},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/docs/providers/telemetry/"},"next":{"title":"Overview","permalink":"/docs/providers/batches/"}}');var i=r(74848),s=r(28453);const l={description:"Meta's reference implementation of telemetry and observability using OpenTelemetry",sidebar_label:"Meta Reference",sidebar_position:2,title:"inline::meta-reference"},d="inline::meta-reference",c={},o=[{value:"Description",id:"description",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Sample Configuration",id:"sample-configuration",level:2}];function a(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"inlinemeta-reference",children:"inline::meta-reference"})}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(t.p,{children:"Meta's reference implementation of telemetry and observability using OpenTelemetry."}),"\n",(0,i.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Field"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Required"}),(0,i.jsx)(t.th,{children:"Default"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"otel_exporter_otlp_endpoint"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"str or None"})}),(0,i.jsx)(t.td,{children:"No"}),(0,i.jsx)(t.td,{}),(0,i.jsx)(t.td,{children:"The OpenTelemetry collector endpoint URL (base URL for traces, metrics, and logs). If not set, the SDK will use OTEL_EXPORTER_OTLP_ENDPOINT environment variable."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"service_name"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"<class 'str'>"})}),(0,i.jsx)(t.td,{children:"No"}),(0,i.jsx)(t.td,{children:"\u200b"}),(0,i.jsx)(t.td,{children:"The service name to use for telemetry"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"sinks"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"list[TelemetrySink]"})}),(0,i.jsx)(t.td,{children:"No"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"[CONSOLE, SQLITE]"})}),(0,i.jsx)(t.td,{children:"List of telemetry sinks to enable (possible values: otel_trace, otel_metric, sqlite, console)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"sqlite_db_path"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"<class 'str'>"})}),(0,i.jsx)(t.td,{children:"No"}),(0,i.jsx)(t.td,{children:"~/.llama/runtime/trace_store.db"}),(0,i.jsx)(t.td,{children:"The path to the SQLite database to use for storing traces"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"sample-configuration",children:"Sample Configuration"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'service_name: "${env.OTEL_SERVICE_NAME:=\\u200B}"\nsinks: ${env.TELEMETRY_SINKS:=console,sqlite}\nsqlite_db_path: ${env.SQLITE_STORE_DIR:=~/.llama/dummy}/trace_store.db\notel_exporter_otlp_endpoint: ${env.OTEL_EXPORTER_OTLP_ENDPOINT:=}\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);