"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[974],{58299:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"concepts/index","title":"Core Concepts","description":"Understanding Llama Stack\'s service-oriented philosophy and key concepts","source":"@site/docs/concepts/index.mdx","sourceDirName":"concepts","slug":"/concepts/","permalink":"/docs/concepts/","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-llama/llama-stack/tree/main/docs/docs/concepts/index.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Core Concepts","description":"Understanding Llama Stack\'s service-oriented philosophy and key concepts","sidebar_label":"Overview","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Libraries","permalink":"/docs/getting-started/libraries"},"next":{"title":"Architecture","permalink":"/docs/concepts/architecture"}}');var r=i(74848),t=i(28453);const c={title:"Core Concepts",description:"Understanding Llama Stack's service-oriented philosophy and key concepts",sidebar_label:"Overview",sidebar_position:1},o="Core Concepts",a={},d=[];function l(e){const s={a:"a",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"core-concepts",children:"Core Concepts"})}),"\n",(0,r.jsx)(s.p,{children:"Given Llama Stack's service-oriented philosophy, a few concepts and workflows arise which may not feel completely natural in the LLM landscape, especially if you are coming with a background in other frameworks."}),"\n",(0,r.jsx)(s.p,{children:"This section covers the key concepts you need to understand to work effectively with Llama Stack:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.a,{href:"./architecture",children:"Architecture"})})," - Llama Stack's service-oriented design and benefits"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.a,{href:"./apis",children:"APIs"})})," - Available REST APIs and planned capabilities"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.a,{href:"./api-providers",children:"API Providers"})})," - Remote vs inline provider implementations"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.a,{href:"./distributions",children:"Distributions"})})," - Pre-packaged provider configurations"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.a,{href:"./resources",children:"Resources"})})," - Resource federation and registration"]}),"\n"]})]})}function p(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);