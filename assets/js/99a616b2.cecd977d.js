"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1129],{58642:(e,r,l)=>{l.r(r),l.d(r,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"providers/inference/remote_ollama","title":"remote::ollama","description":"Ollama inference provider for running local models through the Ollama runtime","source":"@site/docs/providers/inference/remote_ollama.mdx","sourceDirName":"providers/inference","slug":"/providers/inference/remote_ollama","permalink":"/llama-stack/docs/providers/inference/remote_ollama","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-llama/llama-stack/tree/main/docs/docs/providers/inference/remote_ollama.mdx","tags":[],"version":"current","sidebarPosition":16,"frontMatter":{"description":"Ollama inference provider for running local models through the Ollama runtime","sidebar_label":"Ollama","sidebar_position":16,"title":"remote::ollama"},"sidebar":"tutorialSidebar","previous":{"title":"Nvidia","permalink":"/llama-stack/docs/providers/inference/remote_nvidia"},"next":{"title":"Openai","permalink":"/llama-stack/docs/providers/inference/remote_openai"}}');var t=l(74848),n=l(28453);const a={description:"Ollama inference provider for running local models through the Ollama runtime",sidebar_label:"Ollama",sidebar_position:16,title:"remote::ollama"},o="remote::ollama",s={},d=[{value:"Description",id:"description",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Sample Configuration",id:"sample-configuration",level:2}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"remoteollama",children:"remote::ollama"})}),"\n",(0,t.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(r.p,{children:"Ollama inference provider for running local models through the Ollama runtime."}),"\n",(0,t.jsx)(r.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Field"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Required"}),(0,t.jsx)(r.th,{children:"Default"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"url"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"<class 'str'>"})}),(0,t.jsx)(r.td,{children:"No"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"http://localhost:11434",children:"http://localhost:11434"})}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"refresh_models"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"<class 'bool'>"})}),(0,t.jsx)(r.td,{children:"No"}),(0,t.jsx)(r.td,{children:"False"}),(0,t.jsx)(r.td,{children:"Whether to refresh models periodically"})]})]})]}),"\n",(0,t.jsx)(r.h2,{id:"sample-configuration",children:"Sample Configuration"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",children:"url: ${env.OLLAMA_URL:=http://localhost:11434}\n"})})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);