"use strict";(self.webpackChunkdocusaurus_template_openapi_docs=self.webpackChunkdocusaurus_template_openapi_docs||[]).push([[5586],{3820:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"building-applications/agent-execution-loop","title":"Agent Execution Loop","description":"Understanding the internal processing flow of Llama Stack agents","source":"@site/docs/building-applications/agent-execution-loop.mdx","sourceDirName":"building-applications","slug":"/building-applications/agent-execution-loop","permalink":"/llama-stack/docs/building-applications/agent-execution-loop","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-llama/llama-stack/tree/main/docs/docs/building-applications/agent-execution-loop.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Agent Execution Loop","description":"Understanding the internal processing flow of Llama Stack agents","sidebar_label":"Agent Execution Loop","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Agents","permalink":"/llama-stack/docs/building-applications/agent"},"next":{"title":"Agents vs Responses API","permalink":"/llama-stack/docs/building-applications/responses-vs-agents"}}');var o=t(74848),a=t(28453),r=t(64911),i=t(79329);const l={title:"Agent Execution Loop",description:"Understanding the internal processing flow of Llama Stack agents",sidebar_label:"Agent Execution Loop",sidebar_position:4},c="Agent Execution Loop",u={},d=[{value:"Steps in the Agent Workflow",id:"steps-in-the-agent-workflow",level:2},{value:"Execution Flow Diagram",id:"execution-flow-diagram",level:2},{value:"Agent Execution Example",id:"agent-execution-example",level:2},{value:"Key Configuration Options",id:"key-configuration-options",level:2},{value:"Loop Control",id:"loop-control",level:3},{value:"Safety Configuration",id:"safety-configuration",level:3},{value:"Tool Integration",id:"tool-integration",level:3},{value:"Related Resources",id:"related-resources",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"agent-execution-loop",children:"Agent Execution Loop"})}),"\n",(0,o.jsx)(n.p,{children:"Agents are the heart of Llama Stack applications. They combine inference, memory, safety, and tool usage into coherent workflows. At its core, an agent follows a sophisticated execution loop that enables multi-step reasoning, tool usage, and safety checks."}),"\n",(0,o.jsx)(n.h2,{id:"steps-in-the-agent-workflow",children:"Steps in the Agent Workflow"}),"\n",(0,o.jsx)(n.p,{children:"Each agent turn follows these key steps:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Initial Safety Check"}),": The user's input is first screened through configured safety shields"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Context Retrieval"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["If RAG is enabled, the agent can choose to query relevant documents from memory banks. You can use the ",(0,o.jsx)(n.code,{children:"instructions"})," field to steer the agent."]}),"\n",(0,o.jsx)(n.li,{children:"For new documents, they are first inserted into the memory bank."}),"\n",(0,o.jsx)(n.li,{children:"Retrieved context is provided to the LLM as a tool response in the message history."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Inference Loop"}),": The agent enters its main execution loop:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The LLM receives a user prompt (with previous tool outputs)"}),"\n",(0,o.jsxs)(n.li,{children:["The LLM generates a response, potentially with ",(0,o.jsx)(n.a,{href:"./tools",children:"tool calls"})]}),"\n",(0,o.jsxs)(n.li,{children:["If tool calls are present:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Tool inputs are safety-checked"}),"\n",(0,o.jsx)(n.li,{children:"Tools are executed (e.g., web search, code execution)"}),"\n",(0,o.jsx)(n.li,{children:"Tool responses are fed back to the LLM for synthesis"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["The loop continues until:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The LLM provides a final response without tool calls"}),"\n",(0,o.jsx)(n.li,{children:"Maximum iterations are reached"}),"\n",(0,o.jsx)(n.li,{children:"Token limit is exceeded"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Final Safety Check"}),": The agent's final response is screened through safety shields"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"execution-flow-diagram",children:"Execution Flow Diagram"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-mermaid",children:"sequenceDiagram\n    participant U as User\n    participant E as Executor\n    participant M as Memory Bank\n    participant L as LLM\n    participant T as Tools\n    participant S as Safety Shield\n\n    Note over U,S: Agent Turn Start\n    U->>S: 1. Submit Prompt\n    activate S\n    S->>E: Input Safety Check\n    deactivate S\n\n    loop Inference Loop\n        E->>L: 2.1 Augment with Context\n        L--\x3e>E: 2.2 Response (with/without tool calls)\n\n        alt Has Tool Calls\n            E->>S: Check Tool Input\n            S->>T: 3.1 Execute Tool\n            T--\x3e>E: 3.2 Tool Response\n            E->>L: 4.1 Tool Response\n            L--\x3e>E: 4.2 Synthesized Response\n        end\n\n        opt Stop Conditions\n            Note over E: Break if:\n            Note over E: - No tool calls\n            Note over E: - Max iterations reached\n            Note over E: - Token limit exceeded\n        end\n    end\n\n    E->>S: Output Safety Check\n    S->>U: 5. Final Response\n"})}),"\n",(0,o.jsx)(n.p,{children:"Each step in this process can be monitored and controlled through configurations."}),"\n",(0,o.jsx)(n.h2,{id:"agent-execution-example",children:"Agent Execution Example"}),"\n",(0,o.jsx)(n.p,{children:"Here's an example that demonstrates monitoring the agent's execution:"}),"\n",(0,o.jsxs)(r.A,{children:[(0,o.jsx)(i.default,{value:"streaming",label:"Streaming Execution",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from llama_stack_client import LlamaStackClient, Agent, AgentEventLogger\n\n# Replace host and port\nclient = LlamaStackClient(base_url=f"http://{HOST}:{PORT}")\n\nagent = Agent(\n    client,\n    # Check with `llama-stack-client models list`\n    model="Llama3.2-3B-Instruct",\n    instructions="You are a helpful assistant",\n    # Enable both RAG and tool usage\n    tools=[\n        {\n            "name": "builtin::rag/knowledge_search",\n            "args": {"vector_db_ids": ["my_docs"]},\n        },\n        "builtin::code_interpreter",\n    ],\n    # Configure safety (optional)\n    input_shields=["llama_guard"],\n    output_shields=["llama_guard"],\n    # Control the inference loop\n    max_infer_iters=5,\n    sampling_params={\n        "strategy": {"type": "top_p", "temperature": 0.7, "top_p": 0.95},\n        "max_tokens": 2048,\n    },\n)\nsession_id = agent.create_session("monitored_session")\n\n# Stream the agent\'s execution steps\nresponse = agent.create_turn(\n    messages=[{"role": "user", "content": "Analyze this code and run it"}],\n    documents=[\n        {\n            "content": "https://raw.githubusercontent.com/example/code.py",\n            "mime_type": "text/plain",\n        }\n    ],\n    session_id=session_id,\n)\n\n# Monitor each step of execution\nfor log in AgentEventLogger().log(response):\n    log.print()\n'})})}),(0,o.jsx)(i.default,{value:"non-streaming",label:"Non-Streaming Execution",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from rich.pretty import pprint\n\n# Using non-streaming API, the response contains input, steps, and output.\nresponse = agent.create_turn(\n    messages=[{"role": "user", "content": "Analyze this code and run it"}],\n    documents=[\n        {\n            "content": "https://raw.githubusercontent.com/example/code.py",\n            "mime_type": "text/plain",\n        }\n    ],\n    session_id=session_id,\n    stream=False,\n)\n\npprint(f"Input: {response.input_messages}")\npprint(f"Output: {response.output_message.content}")\npprint(f"Steps: {response.steps}")\n'})})})]}),"\n",(0,o.jsx)(n.h2,{id:"key-configuration-options",children:"Key Configuration Options"}),"\n",(0,o.jsx)(n.h3,{id:"loop-control",children:"Loop Control"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"max_infer_iters"}),": Maximum number of inference iterations (default: 5)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"max_tokens"}),": Token limit for responses"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"temperature"}),": Controls response randomness"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"safety-configuration",children:"Safety Configuration"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"input_shields"}),": Safety checks for user input"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"output_shields"}),": Safety checks for agent responses"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"tool-integration",children:"Tool Integration"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"tools"}),": List of available tools for the agent"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"tool_choice"}),": Control over when tools are used"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"related-resources",children:"Related Resources"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"./agent",children:"Agents"})})," - Understanding agent fundamentals"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"./tools",children:"Tools Integration"})})," - Adding capabilities to agents"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"./safety",children:"Safety Guardrails"})})," - Implementing safety measures"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"./rag",children:"RAG (Retrieval Augmented Generation)"})})," - Building knowledge-enhanced workflows"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var s=t(96540);const o={},a=s.createContext(o);function r(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(a.Provider,{value:n},e.children)}},64911:(e,n,t)=>{t.d(n,{A:()=>h});var s=t(96540),o=t(34164),a=t(65627),r=t(77448),i=t(9136);const l={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var c=t(74848);function u({className:e,block:n,selectedValue:t,selectValue:s,tabValues:r}){const i=[],{blockElementScrollPositionUntilNextRender:u}=(0,a.a_)(),d=e=>{const n=e.currentTarget,o=i.indexOf(n),a=r[o].value;a!==t&&(u(n),s(a))},p=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,c.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},e),children:r.map(({value:e,label:n,attributes:s})=>(0,c.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{i.push(e)},onKeyDown:p,onClick:d,...s,className:(0,o.A)("tabs__item",l.tabItem,s?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function d({lazy:e,children:n,selectedValue:t}){const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=a.find(e=>e.props.value===t);return e?(0,s.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,c.jsx)("div",{className:"margin-top--md",children:a.map((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function p(e){const n=(0,r.u)(e);return(0,c.jsxs)("div",{className:(0,o.A)("tabs-container",l.tabList),children:[(0,c.jsx)(u,{...n,...e}),(0,c.jsx)(d,{...n,...e})]})}function h(e){const n=(0,i.default)();return(0,c.jsx)(p,{...e,children:(0,r.v)(e.children)},String(n))}},77448:(e,n,t)=>{t.d(n,{u:()=>h,v:()=>c});var s=t(96540),o=t(56347),a=t(50372),r=t(30604),i=t(78749),l=t(11861);function c(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,s.useMemo)(()=>{const e=n??function(e){return c(e).map(({props:{value:e,label:n,attributes:t,default:s}})=>({value:e,label:n,attributes:t,default:s}))}(t);return function(e){const n=(0,l.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function d({value:e,tabValues:n}){return n.some(n=>n.value===e)}function p({queryString:e=!1,groupId:n}){const t=(0,o.W6)(),a=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,r.aZ)(a),(0,s.useCallback)(e=>{if(!a)return;const n=new URLSearchParams(t.location.search);n.set(a,e),t.replace({...t.location,search:n.toString()})},[a,t])]}function h(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,r=u(e),[l,c]=(0,s.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!d({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r})),[h,g]=p({queryString:t,groupId:o}),[m,f]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,o]=(0,i.Dv)(n);return[t,(0,s.useCallback)(e=>{n&&o.set(e)},[n,o])]}({groupId:o}),x=(()=>{const e=h??m;return d({value:e,tabValues:r})?e:null})();(0,a.A)(()=>{x&&c(x)},[x]);return{selectedValue:l,selectValue:(0,s.useCallback)(e=>{if(!d({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);c(e),g(e),f(e)},[g,f,r]),tabValues:r}}},79329:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});t(96540);var s=t(34164);const o={tabItem:"tabItem_Ymn6"};var a=t(74848);function r({children:e,hidden:n,className:t}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,s.A)(o.tabItem,t),hidden:n,children:e})}}}]);