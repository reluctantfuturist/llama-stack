"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9421],{60363:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"providers/vector_io/inline_faiss","title":"inline::faiss","description":"[Faiss](https://github","source":"@site/docs/providers/vector_io/inline_faiss.mdx","sourceDirName":"providers/vector_io","slug":"/providers/vector_io/inline_faiss","permalink":"/docs/providers/vector_io/inline_faiss","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-llama/llama-stack/tree/main/docs/docs/providers/vector_io/inline_faiss.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"description":"[Faiss](https://github","sidebar_label":"Faiss","sidebar_position":3,"title":"inline::faiss"},"sidebar":"tutorialSidebar","previous":{"title":"Chromadb","permalink":"/docs/providers/vector_io/inline_chromadb"},"next":{"title":"Meta Reference","permalink":"/docs/providers/vector_io/inline_meta-reference"}}');var r=s(74848),n=s(28453);const o={description:"[Faiss](https://github",sidebar_label:"Faiss",sidebar_position:3,title:"inline::faiss"},a="inline::faiss",d={},l=[{value:"Description",id:"description",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Sample Configuration",id:"sample-configuration",level:2}];function c(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"inlinefaiss",children:"inline::faiss"})}),"\n",(0,r.jsx)(i.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"https://github.com/facebookresearch/faiss",children:"Faiss"})," is an inline vector database provider for Llama Stack. It\nallows you to store and query vectors directly in memory.\nThat means you'll get fast and efficient vector retrieval."]}),"\n",(0,r.jsx)(i.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Field"}),(0,r.jsx)(i.th,{children:"Type"}),(0,r.jsx)(i.th,{children:"Required"}),(0,r.jsx)(i.th,{children:"Default"}),(0,r.jsx)(i.th,{children:"Description"})]})}),(0,r.jsx)(i.tbody,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"kvstore"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"utils.kvstore.config.RedisKVStoreConfig | utils.kvstore.config.SqliteKVStoreConfig | utils.kvstore.config.PostgresKVStoreConfig | utils.kvstore.config.MongoDBKVStoreConfig"})}),(0,r.jsx)(i.td,{children:"No"}),(0,r.jsx)(i.td,{children:"sqlite"}),(0,r.jsx)(i.td,{})]})})]}),"\n",(0,r.jsx)(i.h2,{id:"sample-configuration",children:"Sample Configuration"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-yaml",children:"kvstore:\n  type: sqlite\n  db_path: ${env.SQLITE_STORE_DIR:=~/.llama/dummy}/faiss_store.db\n"})})]})}function h(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);