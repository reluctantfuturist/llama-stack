"use strict";(self.webpackChunkdocusaurus_template_openapi_docs=self.webpackChunkdocusaurus_template_openapi_docs||[]).push([[6709],{6620:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"providers/vector_io/remote_pgvector","title":"remote::pgvector","description":"[PGVector](https://github","source":"@site/docs/providers/vector_io/remote_pgvector.mdx","sourceDirName":"providers/vector_io","slug":"/providers/vector_io/remote_pgvector","permalink":"/llama-stack/docs/providers/vector_io/remote_pgvector","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-llama/llama-stack/tree/main/docs/docs/providers/vector_io/remote_pgvector.mdx","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"description":"[PGVector](https://github","sidebar_label":"Pgvector","sidebar_position":11,"title":"remote::pgvector"},"sidebar":"tutorialSidebar","previous":{"title":"Milvus","permalink":"/llama-stack/docs/providers/vector_io/remote_milvus"},"next":{"title":"Qdrant","permalink":"/llama-stack/docs/providers/vector_io/remote_qdrant"}}');var s=r(74848),n=r(28453);const i={description:"[PGVector](https://github",sidebar_label:"Pgvector",sidebar_position:11,title:"remote::pgvector"},d="remote::pgvector",c={},l=[{value:"Description",id:"description",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Sample Configuration",id:"sample-configuration",level:2}];function a(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"remotepgvector",children:"remote::pgvector"})}),"\n",(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://github.com/pgvector/pgvector",children:"PGVector"})," is a remote vector database provider for Llama Stack. It\nallows you to store and query vectors directly in memory.\nThat means you'll get fast and efficient vector retrieval."]}),"\n",(0,s.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Field"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Required"}),(0,s.jsx)(t.th,{children:"Default"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"host"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"str | None"})}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"localhost"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"port"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"int | None"})}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"5432"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"db"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"str | None"})}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"postgres"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"user"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"str | None"})}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"postgres"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"password"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"str | None"})}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"mysecretpassword"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"kvstore"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"utils.kvstore.config.RedisKVStoreConfig | utils.kvstore.config.SqliteKVStoreConfig | utils.kvstore.config.PostgresKVStoreConfig | utils.kvstore.config.MongoDBKVStoreConfig, annotation=NoneType, required=False, default='sqlite', discriminator='type'"})}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"Config for KV store backend (SQLite only for now)"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"sample-configuration",children:"Sample Configuration"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"host: ${env.PGVECTOR_HOST:=localhost}\nport: ${env.PGVECTOR_PORT:=5432}\ndb: ${env.PGVECTOR_DB}\nuser: ${env.PGVECTOR_USER}\npassword: ${env.PGVECTOR_PASSWORD}\nkvstore:\n  type: sqlite\n  db_path: ${env.SQLITE_STORE_DIR:=~/.llama/dummy}/pgvector_registry.db\n"})})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>d});var o=r(96540);const s={},n=o.createContext(s);function i(e){const t=o.useContext(n);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);