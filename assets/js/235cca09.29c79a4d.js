"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9507],{34579:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>f,contentTitle:()=>h,default:()=>A,frontMatter:()=>u,metadata:()=>o,toc:()=>b});const o=JSON.parse('{"id":"api/create-agent-turn","title":"Create a new turn for an agent.","description":"Create a new turn for an agent.","source":"@site/docs/api/create-agent-turn.api.mdx","sourceDirName":"api","slug":"/api/create-agent-turn","permalink":"/docs/api/create-agent-turn","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"create-agent-turn","title":"Create a new turn for an agent.","description":"Create a new turn for an agent.","sidebar_label":"Create a new turn for an agent.","hide_title":true,"hide_table_of_contents":true,"api":"","sidebar_class_name":"post api-method","info_path":"docs/api/llama-stack-specification","custom_edit_url":null},"sidebar":"apiSidebar","previous":{"title":"Create a new session for an agent.","permalink":"/docs/api/create-agent-session"},"next":{"title":"List all OpenAI responses.","permalink":"/docs/api/list-openai-responses"}}');var n=i(74848),r=i(28453),a=i(57742),s=i.n(a),p=i(78178),d=i.n(p),c=i(19624),l=i.n(c),m=i(96226),g=i.n(m),y=(i(77675),i(19365),i(51107));const u={id:"create-agent-turn",title:"Create a new turn for an agent.",description:"Create a new turn for an agent.",sidebar_label:"Create a new turn for an agent.",hide_title:!0,hide_table_of_contents:!0,api:"",sidebar_class_name:"post api-method",info_path:"docs/api/llama-stack-specification",custom_edit_url:null},h=void 0,f={},b=[];function x(t){const e={p:"p",...(0,r.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(y.default,{as:"h1",className:"openapi__heading",children:"Create a new turn for an agent."}),"\n",(0,n.jsx)(s(),{method:"post",path:"/v1/agents/{agent_id}/session/{session_id}/turn",context:"endpoint"}),"\n",(0,n.jsx)(e.p,{children:"Create a new turn for an agent."}),"\n",(0,n.jsx)(y.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,n.jsx)(d(),{parameters:[{name:"agent_id",in:"path",description:"The ID of the agent to create the turn for.",required:!0,schema:{type:"string"}},{name:"session_id",in:"path",description:"The ID of the session to create the turn for.",required:!0,schema:{type:"string"}}]}),"\n",(0,n.jsx)(l(),{title:"Body",body:{content:{"application/json":{schema:{type:"object",properties:{messages:{type:"array",items:{oneOf:[{type:"object",properties:{role:{type:"string",const:"user",default:"user",description:'Must be "user" to identify this as a user message'},content:{description:"The content of the message, which can include text and other media",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},context:{description:"(Optional) This field is used internally by Llama Stack to pass RAG context. This field may be removed in the API in the future.",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"}},additionalProperties:!1,required:["role","content"],title:"UserMessage",description:"A message from the user in a chat conversation."},{type:"object",properties:{role:{type:"string",const:"tool",default:"tool",description:'Must be "tool" to identify this as a tool response'},call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},content:{description:"The response content from the tool",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"}},additionalProperties:!1,required:["role","call_id","content"],title:"ToolResponseMessage",description:"A message representing the result of a tool invocation."}]},description:"List of messages to start the turn with."},stream:{type:"boolean",description:"(Optional) If True, generate an SSE event stream of the response. Defaults to False."},documents:{type:"array",items:{type:"object",properties:{content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}},{type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL",description:"A URL reference to external content."}],description:"The content of the document."},mime_type:{type:"string",description:"The MIME type of the document."}},additionalProperties:!1,required:["content","mime_type"],title:"Document",description:"A document to be used by an agent."},description:"(Optional) List of documents to create the turn with."},toolgroups:{type:"array",items:{oneOf:[{type:"string"},{type:"object",properties:{name:{type:"string"},args:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]}}},additionalProperties:!1,required:["name","args"],title:"AgentToolGroupWithArgs"}],title:"AgentTool"},description:"(Optional) List of toolgroups to create the turn with, will be used in addition to the agent's config toolgroups for the request."},tool_config:{type:"object",properties:{tool_choice:{oneOf:[{type:"string",enum:["auto","required","none"],title:"ToolChoice",description:"Whether tool use is required or automatic. This is a hint to the model which may not be followed. It depends on the Instruction Following capabilities of the model."},{type:"string"}],default:"auto",description:"(Optional) Whether tool use is automatic, required, or none. Can also specify a tool name to use a specific tool. Defaults to ToolChoice.auto."},tool_prompt_format:{type:"string",enum:["json","function_tag","python_list"],description:"(Optional) Instructs the model how to format tool calls. By default, Llama Stack will attempt to use a format that is best adapted to the model. - `ToolPromptFormat.json`: The tool calls are formatted as a JSON object. - `ToolPromptFormat.function_tag`: The tool calls are enclosed in a <function=function_name> tag. - `ToolPromptFormat.python_list`: The tool calls are output as Python syntax -- a list of function calls."},system_message_behavior:{type:"string",enum:["append","replace"],description:"(Optional) Config for how to override the default system prompt. - `SystemMessageBehavior.append`: Appends the provided system message to the default system prompt. - `SystemMessageBehavior.replace`: Replaces the default system prompt with the provided system message. The system message can include the string '{{function_definitions}}' to indicate where the function definitions should be inserted.",default:"append"}},additionalProperties:!1,title:"ToolConfig",description:"Configuration for tool use."}},additionalProperties:!1,required:["messages"],title:"CreateAgentTurnRequest"}}},required:!0}}),"\n",(0,n.jsx)(g(),{id:void 0,label:void 0,responses:{200:{description:"If stream=False, returns a Turn object. If stream=True, returns an SSE event stream of AgentTurnResponseStreamChunk.",content:{"application/json":{schema:{type:"object",properties:{turn_id:{type:"string",description:"Unique identifier for the turn within a session"},session_id:{type:"string",description:"Unique identifier for the conversation session"},input_messages:{type:"array",items:{oneOf:[{type:"object",properties:{role:{type:"string",const:"user",default:"user",description:'Must be "user" to identify this as a user message'},content:{description:"The content of the message, which can include text and other media",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},context:{description:"(Optional) This field is used internally by Llama Stack to pass RAG context. This field may be removed in the API in the future.",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"}},additionalProperties:!1,required:["role","content"],title:"UserMessage",description:"A message from the user in a chat conversation."},{type:"object",properties:{role:{type:"string",const:"tool",default:"tool",description:'Must be "tool" to identify this as a tool response'},call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},content:{description:"The response content from the tool",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"}},additionalProperties:!1,required:["role","call_id","content"],title:"ToolResponseMessage",description:"A message representing the result of a tool invocation."}]},description:"List of messages that initiated this turn"},steps:{type:"array",items:{oneOf:[{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"inference",default:"inference"},model_response:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."}},additionalProperties:!1,required:["turn_id","step_id","step_type","model_response"],title:"InferenceStep",description:"An inference step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"tool_execution",default:"tool_execution"},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"The tool calls to execute."},tool_responses:{type:"array",items:{type:"object",properties:{call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}],description:"Name of the tool that was invoked"},content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The response content from the tool"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"(Optional) Additional metadata about the tool response"}},additionalProperties:!1,required:["call_id","tool_name","content"],title:"ToolResponse",description:"Response from a tool invocation."},description:"The tool responses from the tool calls."}},additionalProperties:!1,required:["turn_id","step_id","step_type","tool_calls","tool_responses"],title:"ToolExecutionStep",description:"A tool execution step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"shield_call",default:"shield_call"},violation:{description:"The violation from the shield call.",type:"object",properties:{violation_level:{description:"Severity level of the violation",type:"string",enum:["info","warn","error"],title:"ViolationLevel"},user_message:{type:"string",description:"(Optional) Message to convey to the user about the violation"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"Additional metadata including specific violation codes for debugging and telemetry"}},additionalProperties:!1,required:["violation_level","metadata"],title:"SafetyViolation"}},additionalProperties:!1,required:["turn_id","step_id","step_type"],title:"ShieldCallStep",description:"A shield call step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"memory_retrieval",default:"memory_retrieval"},vector_db_ids:{type:"string",description:"The IDs of the vector databases to retrieve context from."},inserted_context:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The context retrieved from the vector databases."}},additionalProperties:!1,required:["turn_id","step_id","step_type","vector_db_ids","inserted_context"],title:"MemoryRetrievalStep",description:"A memory retrieval step in an agent turn."}],discriminator:{propertyName:"step_type",mapping:{inference:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"inference",default:"inference"},model_response:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."}},additionalProperties:!1,required:["turn_id","step_id","step_type","model_response"],title:"InferenceStep",description:"An inference step in an agent turn."},tool_execution:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"tool_execution",default:"tool_execution"},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"The tool calls to execute."},tool_responses:{type:"array",items:{type:"object",properties:{call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}],description:"Name of the tool that was invoked"},content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The response content from the tool"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"(Optional) Additional metadata about the tool response"}},additionalProperties:!1,required:["call_id","tool_name","content"],title:"ToolResponse",description:"Response from a tool invocation."},description:"The tool responses from the tool calls."}},additionalProperties:!1,required:["turn_id","step_id","step_type","tool_calls","tool_responses"],title:"ToolExecutionStep",description:"A tool execution step in an agent turn."},shield_call:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"shield_call",default:"shield_call"},violation:{description:"The violation from the shield call.",type:"object",properties:{violation_level:{description:"Severity level of the violation",type:"string",enum:["info","warn","error"],title:"ViolationLevel"},user_message:{type:"string",description:"(Optional) Message to convey to the user about the violation"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"Additional metadata including specific violation codes for debugging and telemetry"}},additionalProperties:!1,required:["violation_level","metadata"],title:"SafetyViolation"}},additionalProperties:!1,required:["turn_id","step_id","step_type"],title:"ShieldCallStep",description:"A shield call step in an agent turn."},memory_retrieval:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"memory_retrieval",default:"memory_retrieval"},vector_db_ids:{type:"string",description:"The IDs of the vector databases to retrieve context from."},inserted_context:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The context retrieved from the vector databases."}},additionalProperties:!1,required:["turn_id","step_id","step_type","vector_db_ids","inserted_context"],title:"MemoryRetrievalStep",description:"A memory retrieval step in an agent turn."}}}},description:"Ordered list of processing steps executed during this turn"},output_message:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."},output_attachments:{type:"array",items:{type:"object",properties:{content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}},{type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL",description:"A URL reference to external content."}],description:"The content of the attachment."},mime_type:{type:"string",description:"The MIME type of the attachment."}},additionalProperties:!1,required:["content","mime_type"],title:"Attachment",description:"An attachment to an agent turn."},description:"(Optional) Files or media attached to the agent's response"},started_at:{type:"string",format:"date-time",description:"Timestamp when the turn began"},completed_at:{type:"string",format:"date-time",description:"(Optional) Timestamp when the turn finished, if completed"}},additionalProperties:!1,required:["turn_id","session_id","input_messages","steps","output_message","started_at"],title:"Turn",description:"A single turn in an interaction with an Agentic System."}},"text/event-stream":{schema:{type:"object",properties:{event:{description:"Individual event in the agent turn response stream",type:"object",properties:{payload:{description:"Event-specific payload containing event data",oneOf:[{type:"object",properties:{event_type:{type:"string",enum:["step_start","step_complete","step_progress","turn_start","turn_complete","turn_awaiting_input"],const:"step_start",default:"step_start",description:"Type of event being reported"},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],description:"Type of step being executed"},step_id:{type:"string",description:"Unique identifier for the step within a turn"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"(Optional) Additional metadata for the step"}},additionalProperties:!1,required:["event_type","step_type","step_id"],title:"AgentTurnResponseStepStartPayload",description:"Payload for step start events in agent turn responses."},{type:"object",properties:{event_type:{type:"string",enum:["step_start","step_complete","step_progress","turn_start","turn_complete","turn_awaiting_input"],const:"step_progress",default:"step_progress",description:"Type of event being reported"},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],description:"Type of step being executed"},step_id:{type:"string",description:"Unique identifier for the step within a turn"},delta:{description:"Incremental content changes during step execution",oneOf:[{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the delta. Always "text"'},text:{type:"string",description:"The incremental text content"}},additionalProperties:!1,required:["type","text"],title:"TextDelta",description:"A text content delta for streaming responses."},{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the delta. Always "image"'},image:{type:"string",contentEncoding:"base64",description:"The incremental image data as bytes"}},additionalProperties:!1,required:["type","image"],title:"ImageDelta",description:"An image content delta for streaming responses."},{type:"object",properties:{type:{type:"string",const:"tool_call",default:"tool_call",description:'Discriminator type of the delta. Always "tool_call"'},tool_call:{oneOf:[{type:"string"},{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"}],description:"Either an in-progress tool call string or the final parsed tool call"},parse_status:{type:"string",enum:["started","in_progress","failed","succeeded"],description:"Current parsing status of the tool call"}},additionalProperties:!1,required:["type","tool_call","parse_status"],title:"ToolCallDelta",description:"A tool call content delta for streaming responses."}],discriminator:{propertyName:"type",mapping:{text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the delta. Always "text"'},text:{type:"string",description:"The incremental text content"}},additionalProperties:!1,required:["type","text"],title:"TextDelta",description:"A text content delta for streaming responses."},image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the delta. Always "image"'},image:{type:"string",contentEncoding:"base64",description:"The incremental image data as bytes"}},additionalProperties:!1,required:["type","image"],title:"ImageDelta",description:"An image content delta for streaming responses."},tool_call:{type:"object",properties:{type:{type:"string",const:"tool_call",default:"tool_call",description:'Discriminator type of the delta. Always "tool_call"'},tool_call:{oneOf:[{type:"string"},{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"}],description:"Either an in-progress tool call string or the final parsed tool call"},parse_status:{type:"string",enum:["started","in_progress","failed","succeeded"],description:"Current parsing status of the tool call"}},additionalProperties:!1,required:["type","tool_call","parse_status"],title:"ToolCallDelta",description:"A tool call content delta for streaming responses."}}},title:"ContentDelta"}},additionalProperties:!1,required:["event_type","step_type","step_id","delta"],title:"AgentTurnResponseStepProgressPayload",description:"Payload for step progress events in agent turn responses."},{type:"object",properties:{event_type:{type:"string",enum:["step_start","step_complete","step_progress","turn_start","turn_complete","turn_awaiting_input"],const:"step_complete",default:"step_complete",description:"Type of event being reported"},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],description:"Type of step being executed"},step_id:{type:"string",description:"Unique identifier for the step within a turn"},step_details:{oneOf:[{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"inference",default:"inference"},model_response:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."}},additionalProperties:!1,required:["turn_id","step_id","step_type","model_response"],title:"InferenceStep",description:"An inference step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"tool_execution",default:"tool_execution"},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"The tool calls to execute."},tool_responses:{type:"array",items:{type:"object",properties:{call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}],description:"Name of the tool that was invoked"},content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The response content from the tool"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"(Optional) Additional metadata about the tool response"}},additionalProperties:!1,required:["call_id","tool_name","content"],title:"ToolResponse",description:"Response from a tool invocation."},description:"The tool responses from the tool calls."}},additionalProperties:!1,required:["turn_id","step_id","step_type","tool_calls","tool_responses"],title:"ToolExecutionStep",description:"A tool execution step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"shield_call",default:"shield_call"},violation:{description:"The violation from the shield call.",type:"object",properties:{violation_level:{description:"Severity level of the violation",type:"string",enum:["info","warn","error"],title:"ViolationLevel"},user_message:{type:"string",description:"(Optional) Message to convey to the user about the violation"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"Additional metadata including specific violation codes for debugging and telemetry"}},additionalProperties:!1,required:["violation_level","metadata"],title:"SafetyViolation"}},additionalProperties:!1,required:["turn_id","step_id","step_type"],title:"ShieldCallStep",description:"A shield call step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"memory_retrieval",default:"memory_retrieval"},vector_db_ids:{type:"string",description:"The IDs of the vector databases to retrieve context from."},inserted_context:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The context retrieved from the vector databases."}},additionalProperties:!1,required:["turn_id","step_id","step_type","vector_db_ids","inserted_context"],title:"MemoryRetrievalStep",description:"A memory retrieval step in an agent turn."}],discriminator:{propertyName:"step_type",mapping:{inference:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"inference",default:"inference"},model_response:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."}},additionalProperties:!1,required:["turn_id","step_id","step_type","model_response"],title:"InferenceStep",description:"An inference step in an agent turn."},tool_execution:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"tool_execution",default:"tool_execution"},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"The tool calls to execute."},tool_responses:{type:"array",items:{type:"object",properties:{call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}],description:"Name of the tool that was invoked"},content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The response content from the tool"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"(Optional) Additional metadata about the tool response"}},additionalProperties:!1,required:["call_id","tool_name","content"],title:"ToolResponse",description:"Response from a tool invocation."},description:"The tool responses from the tool calls."}},additionalProperties:!1,required:["turn_id","step_id","step_type","tool_calls","tool_responses"],title:"ToolExecutionStep",description:"A tool execution step in an agent turn."},shield_call:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"shield_call",default:"shield_call"},violation:{description:"The violation from the shield call.",type:"object",properties:{violation_level:{description:"Severity level of the violation",type:"string",enum:["info","warn","error"],title:"ViolationLevel"},user_message:{type:"string",description:"(Optional) Message to convey to the user about the violation"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"Additional metadata including specific violation codes for debugging and telemetry"}},additionalProperties:!1,required:["violation_level","metadata"],title:"SafetyViolation"}},additionalProperties:!1,required:["turn_id","step_id","step_type"],title:"ShieldCallStep",description:"A shield call step in an agent turn."},memory_retrieval:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"memory_retrieval",default:"memory_retrieval"},vector_db_ids:{type:"string",description:"The IDs of the vector databases to retrieve context from."},inserted_context:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The context retrieved from the vector databases."}},additionalProperties:!1,required:["turn_id","step_id","step_type","vector_db_ids","inserted_context"],title:"MemoryRetrievalStep",description:"A memory retrieval step in an agent turn."}}},description:"Complete details of the executed step"}},additionalProperties:!1,required:["event_type","step_type","step_id","step_details"],title:"AgentTurnResponseStepCompletePayload",description:"Payload for step completion events in agent turn responses."},{type:"object",properties:{event_type:{type:"string",enum:["step_start","step_complete","step_progress","turn_start","turn_complete","turn_awaiting_input"],const:"turn_start",default:"turn_start",description:"Type of event being reported"},turn_id:{type:"string",description:"Unique identifier for the turn within a session"}},additionalProperties:!1,required:["event_type","turn_id"],title:"AgentTurnResponseTurnStartPayload",description:"Payload for turn start events in agent turn responses."},{type:"object",properties:{event_type:{type:"string",enum:["step_start","step_complete","step_progress","turn_start","turn_complete","turn_awaiting_input"],const:"turn_complete",default:"turn_complete",description:"Type of event being reported"},turn:{type:"object",properties:{turn_id:{type:"string",description:"Unique identifier for the turn within a session"},session_id:{type:"string",description:"Unique identifier for the conversation session"},input_messages:{type:"array",items:{oneOf:[{type:"object",properties:{role:{type:"string",const:"user",default:"user",description:'Must be "user" to identify this as a user message'},content:{description:"The content of the message, which can include text and other media",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},context:{description:"(Optional) This field is used internally by Llama Stack to pass RAG context. This field may be removed in the API in the future.",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"}},additionalProperties:!1,required:["role","content"],title:"UserMessage",description:"A message from the user in a chat conversation."},{type:"object",properties:{role:{type:"string",const:"tool",default:"tool",description:'Must be "tool" to identify this as a tool response'},call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},content:{description:"The response content from the tool",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"}},additionalProperties:!1,required:["role","call_id","content"],title:"ToolResponseMessage",description:"A message representing the result of a tool invocation."}]},description:"List of messages that initiated this turn"},steps:{type:"array",items:{oneOf:[{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"inference",default:"inference"},model_response:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."}},additionalProperties:!1,required:["turn_id","step_id","step_type","model_response"],title:"InferenceStep",description:"An inference step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"tool_execution",default:"tool_execution"},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"The tool calls to execute."},tool_responses:{type:"array",items:{type:"object",properties:{call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}],description:"Name of the tool that was invoked"},content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The response content from the tool"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"(Optional) Additional metadata about the tool response"}},additionalProperties:!1,required:["call_id","tool_name","content"],title:"ToolResponse",description:"Response from a tool invocation."},description:"The tool responses from the tool calls."}},additionalProperties:!1,required:["turn_id","step_id","step_type","tool_calls","tool_responses"],title:"ToolExecutionStep",description:"A tool execution step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"shield_call",default:"shield_call"},violation:{description:"The violation from the shield call.",type:"object",properties:{violation_level:{description:"Severity level of the violation",type:"string",enum:["info","warn","error"],title:"ViolationLevel"},user_message:{type:"string",description:"(Optional) Message to convey to the user about the violation"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"Additional metadata including specific violation codes for debugging and telemetry"}},additionalProperties:!1,required:["violation_level","metadata"],title:"SafetyViolation"}},additionalProperties:!1,required:["turn_id","step_id","step_type"],title:"ShieldCallStep",description:"A shield call step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"memory_retrieval",default:"memory_retrieval"},vector_db_ids:{type:"string",description:"The IDs of the vector databases to retrieve context from."},inserted_context:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The context retrieved from the vector databases."}},additionalProperties:!1,required:["turn_id","step_id","step_type","vector_db_ids","inserted_context"],title:"MemoryRetrievalStep",description:"A memory retrieval step in an agent turn."}],discriminator:{propertyName:"step_type",mapping:{inference:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"inference",default:"inference"},model_response:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."}},additionalProperties:!1,required:["turn_id","step_id","step_type","model_response"],title:"InferenceStep",description:"An inference step in an agent turn."},tool_execution:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"tool_execution",default:"tool_execution"},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"The tool calls to execute."},tool_responses:{type:"array",items:{type:"object",properties:{call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}],description:"Name of the tool that was invoked"},content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The response content from the tool"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"(Optional) Additional metadata about the tool response"}},additionalProperties:!1,required:["call_id","tool_name","content"],title:"ToolResponse",description:"Response from a tool invocation."},description:"The tool responses from the tool calls."}},additionalProperties:!1,required:["turn_id","step_id","step_type","tool_calls","tool_responses"],title:"ToolExecutionStep",description:"A tool execution step in an agent turn."},shield_call:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"shield_call",default:"shield_call"},violation:{description:"The violation from the shield call.",type:"object",properties:{violation_level:{description:"Severity level of the violation",type:"string",enum:["info","warn","error"],title:"ViolationLevel"},user_message:{type:"string",description:"(Optional) Message to convey to the user about the violation"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"Additional metadata including specific violation codes for debugging and telemetry"}},additionalProperties:!1,required:["violation_level","metadata"],title:"SafetyViolation"}},additionalProperties:!1,required:["turn_id","step_id","step_type"],title:"ShieldCallStep",description:"A shield call step in an agent turn."},memory_retrieval:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"memory_retrieval",default:"memory_retrieval"},vector_db_ids:{type:"string",description:"The IDs of the vector databases to retrieve context from."},inserted_context:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The context retrieved from the vector databases."}},additionalProperties:!1,required:["turn_id","step_id","step_type","vector_db_ids","inserted_context"],title:"MemoryRetrievalStep",description:"A memory retrieval step in an agent turn."}}}},description:"Ordered list of processing steps executed during this turn"},output_message:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."},output_attachments:{type:"array",items:{type:"object",properties:{content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}},{type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL",description:"A URL reference to external content."}],description:"The content of the attachment."},mime_type:{type:"string",description:"The MIME type of the attachment."}},additionalProperties:!1,required:["content","mime_type"],title:"Attachment",description:"An attachment to an agent turn."},description:"(Optional) Files or media attached to the agent's response"},started_at:{type:"string",format:"date-time",description:"Timestamp when the turn began"},completed_at:{type:"string",format:"date-time",description:"(Optional) Timestamp when the turn finished, if completed"}},additionalProperties:!1,required:["turn_id","session_id","input_messages","steps","output_message","started_at"],title:"Turn",description:"A single turn in an interaction with an Agentic System."}},additionalProperties:!1,required:["event_type","turn"],title:"AgentTurnResponseTurnCompletePayload",description:"Payload for turn completion events in agent turn responses."},{type:"object",properties:{event_type:{type:"string",enum:["step_start","step_complete","step_progress","turn_start","turn_complete","turn_awaiting_input"],const:"turn_awaiting_input",default:"turn_awaiting_input",description:"Type of event being reported"},turn:{type:"object",properties:{turn_id:{type:"string",description:"Unique identifier for the turn within a session"},session_id:{type:"string",description:"Unique identifier for the conversation session"},input_messages:{type:"array",items:{oneOf:[{type:"object",properties:{role:{type:"string",const:"user",default:"user",description:'Must be "user" to identify this as a user message'},content:{description:"The content of the message, which can include text and other media",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},context:{description:"(Optional) This field is used internally by Llama Stack to pass RAG context. This field may be removed in the API in the future.",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"}},additionalProperties:!1,required:["role","content"],title:"UserMessage",description:"A message from the user in a chat conversation."},{type:"object",properties:{role:{type:"string",const:"tool",default:"tool",description:'Must be "tool" to identify this as a tool response'},call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},content:{description:"The response content from the tool",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"}},additionalProperties:!1,required:["role","call_id","content"],title:"ToolResponseMessage",description:"A message representing the result of a tool invocation."}]},description:"List of messages that initiated this turn"},steps:{type:"array",items:{oneOf:[{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"inference",default:"inference"},model_response:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."}},additionalProperties:!1,required:["turn_id","step_id","step_type","model_response"],title:"InferenceStep",description:"An inference step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"tool_execution",default:"tool_execution"},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"The tool calls to execute."},tool_responses:{type:"array",items:{type:"object",properties:{call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}],description:"Name of the tool that was invoked"},content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The response content from the tool"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"(Optional) Additional metadata about the tool response"}},additionalProperties:!1,required:["call_id","tool_name","content"],title:"ToolResponse",description:"Response from a tool invocation."},description:"The tool responses from the tool calls."}},additionalProperties:!1,required:["turn_id","step_id","step_type","tool_calls","tool_responses"],title:"ToolExecutionStep",description:"A tool execution step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"shield_call",default:"shield_call"},violation:{description:"The violation from the shield call.",type:"object",properties:{violation_level:{description:"Severity level of the violation",type:"string",enum:["info","warn","error"],title:"ViolationLevel"},user_message:{type:"string",description:"(Optional) Message to convey to the user about the violation"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"Additional metadata including specific violation codes for debugging and telemetry"}},additionalProperties:!1,required:["violation_level","metadata"],title:"SafetyViolation"}},additionalProperties:!1,required:["turn_id","step_id","step_type"],title:"ShieldCallStep",description:"A shield call step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"memory_retrieval",default:"memory_retrieval"},vector_db_ids:{type:"string",description:"The IDs of the vector databases to retrieve context from."},inserted_context:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The context retrieved from the vector databases."}},additionalProperties:!1,required:["turn_id","step_id","step_type","vector_db_ids","inserted_context"],title:"MemoryRetrievalStep",description:"A memory retrieval step in an agent turn."}],discriminator:{propertyName:"step_type",mapping:{inference:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"inference",default:"inference"},model_response:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."}},additionalProperties:!1,required:["turn_id","step_id","step_type","model_response"],title:"InferenceStep",description:"An inference step in an agent turn."},tool_execution:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"tool_execution",default:"tool_execution"},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"The tool calls to execute."},tool_responses:{type:"array",items:{type:"object",properties:{call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}],description:"Name of the tool that was invoked"},content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The response content from the tool"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"(Optional) Additional metadata about the tool response"}},additionalProperties:!1,required:["call_id","tool_name","content"],title:"ToolResponse",description:"Response from a tool invocation."},description:"The tool responses from the tool calls."}},additionalProperties:!1,required:["turn_id","step_id","step_type","tool_calls","tool_responses"],title:"ToolExecutionStep",description:"A tool execution step in an agent turn."},shield_call:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"shield_call",default:"shield_call"},violation:{description:"The violation from the shield call.",type:"object",properties:{violation_level:{description:"Severity level of the violation",type:"string",enum:["info","warn","error"],title:"ViolationLevel"},user_message:{type:"string",description:"(Optional) Message to convey to the user about the violation"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"Additional metadata including specific violation codes for debugging and telemetry"}},additionalProperties:!1,required:["violation_level","metadata"],title:"SafetyViolation"}},additionalProperties:!1,required:["turn_id","step_id","step_type"],title:"ShieldCallStep",description:"A shield call step in an agent turn."},memory_retrieval:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"memory_retrieval",default:"memory_retrieval"},vector_db_ids:{type:"string",description:"The IDs of the vector databases to retrieve context from."},inserted_context:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The context retrieved from the vector databases."}},additionalProperties:!1,required:["turn_id","step_id","step_type","vector_db_ids","inserted_context"],title:"MemoryRetrievalStep",description:"A memory retrieval step in an agent turn."}}}},description:"Ordered list of processing steps executed during this turn"},output_message:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."},output_attachments:{type:"array",items:{type:"object",properties:{content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}},{type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL",description:"A URL reference to external content."}],description:"The content of the attachment."},mime_type:{type:"string",description:"The MIME type of the attachment."}},additionalProperties:!1,required:["content","mime_type"],title:"Attachment",description:"An attachment to an agent turn."},description:"(Optional) Files or media attached to the agent's response"},started_at:{type:"string",format:"date-time",description:"Timestamp when the turn began"},completed_at:{type:"string",format:"date-time",description:"(Optional) Timestamp when the turn finished, if completed"}},additionalProperties:!1,required:["turn_id","session_id","input_messages","steps","output_message","started_at"],title:"Turn",description:"A single turn in an interaction with an Agentic System."}},additionalProperties:!1,required:["event_type","turn"],title:"AgentTurnResponseTurnAwaitingInputPayload",description:"Payload for turn awaiting input events in agent turn responses."}],discriminator:{propertyName:"event_type",mapping:{step_start:{type:"object",properties:{event_type:{type:"string",enum:["step_start","step_complete","step_progress","turn_start","turn_complete","turn_awaiting_input"],const:"step_start",default:"step_start",description:"Type of event being reported"},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],description:"Type of step being executed"},step_id:{type:"string",description:"Unique identifier for the step within a turn"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"(Optional) Additional metadata for the step"}},additionalProperties:!1,required:["event_type","step_type","step_id"],title:"AgentTurnResponseStepStartPayload",description:"Payload for step start events in agent turn responses."},step_progress:{type:"object",properties:{event_type:{type:"string",enum:["step_start","step_complete","step_progress","turn_start","turn_complete","turn_awaiting_input"],const:"step_progress",default:"step_progress",description:"Type of event being reported"},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],description:"Type of step being executed"},step_id:{type:"string",description:"Unique identifier for the step within a turn"},delta:{description:"Incremental content changes during step execution",oneOf:[{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the delta. Always "text"'},text:{type:"string",description:"The incremental text content"}},additionalProperties:!1,required:["type","text"],title:"TextDelta",description:"A text content delta for streaming responses."},{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the delta. Always "image"'},image:{type:"string",contentEncoding:"base64",description:"The incremental image data as bytes"}},additionalProperties:!1,required:["type","image"],title:"ImageDelta",description:"An image content delta for streaming responses."},{type:"object",properties:{type:{type:"string",const:"tool_call",default:"tool_call",description:'Discriminator type of the delta. Always "tool_call"'},tool_call:{oneOf:[{type:"string"},{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"}],description:"Either an in-progress tool call string or the final parsed tool call"},parse_status:{type:"string",enum:["started","in_progress","failed","succeeded"],description:"Current parsing status of the tool call"}},additionalProperties:!1,required:["type","tool_call","parse_status"],title:"ToolCallDelta",description:"A tool call content delta for streaming responses."}],discriminator:{propertyName:"type",mapping:{text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the delta. Always "text"'},text:{type:"string",description:"The incremental text content"}},additionalProperties:!1,required:["type","text"],title:"TextDelta",description:"A text content delta for streaming responses."},image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the delta. Always "image"'},image:{type:"string",contentEncoding:"base64",description:"The incremental image data as bytes"}},additionalProperties:!1,required:["type","image"],title:"ImageDelta",description:"An image content delta for streaming responses."},tool_call:{type:"object",properties:{type:{type:"string",const:"tool_call",default:"tool_call",description:'Discriminator type of the delta. Always "tool_call"'},tool_call:{oneOf:[{type:"string"},{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"}],description:"Either an in-progress tool call string or the final parsed tool call"},parse_status:{type:"string",enum:["started","in_progress","failed","succeeded"],description:"Current parsing status of the tool call"}},additionalProperties:!1,required:["type","tool_call","parse_status"],title:"ToolCallDelta",description:"A tool call content delta for streaming responses."}}},title:"ContentDelta"}},additionalProperties:!1,required:["event_type","step_type","step_id","delta"],title:"AgentTurnResponseStepProgressPayload",description:"Payload for step progress events in agent turn responses."},step_complete:{type:"object",properties:{event_type:{type:"string",enum:["step_start","step_complete","step_progress","turn_start","turn_complete","turn_awaiting_input"],const:"step_complete",default:"step_complete",description:"Type of event being reported"},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],description:"Type of step being executed"},step_id:{type:"string",description:"Unique identifier for the step within a turn"},step_details:{oneOf:[{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"inference",default:"inference"},model_response:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."}},additionalProperties:!1,required:["turn_id","step_id","step_type","model_response"],title:"InferenceStep",description:"An inference step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"tool_execution",default:"tool_execution"},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"The tool calls to execute."},tool_responses:{type:"array",items:{type:"object",properties:{call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}],description:"Name of the tool that was invoked"},content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The response content from the tool"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"(Optional) Additional metadata about the tool response"}},additionalProperties:!1,required:["call_id","tool_name","content"],title:"ToolResponse",description:"Response from a tool invocation."},description:"The tool responses from the tool calls."}},additionalProperties:!1,required:["turn_id","step_id","step_type","tool_calls","tool_responses"],title:"ToolExecutionStep",description:"A tool execution step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"shield_call",default:"shield_call"},violation:{description:"The violation from the shield call.",type:"object",properties:{violation_level:{description:"Severity level of the violation",type:"string",enum:["info","warn","error"],title:"ViolationLevel"},user_message:{type:"string",description:"(Optional) Message to convey to the user about the violation"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"Additional metadata including specific violation codes for debugging and telemetry"}},additionalProperties:!1,required:["violation_level","metadata"],title:"SafetyViolation"}},additionalProperties:!1,required:["turn_id","step_id","step_type"],title:"ShieldCallStep",description:"A shield call step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"memory_retrieval",default:"memory_retrieval"},vector_db_ids:{type:"string",description:"The IDs of the vector databases to retrieve context from."},inserted_context:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The context retrieved from the vector databases."}},additionalProperties:!1,required:["turn_id","step_id","step_type","vector_db_ids","inserted_context"],title:"MemoryRetrievalStep",description:"A memory retrieval step in an agent turn."}],discriminator:{propertyName:"step_type",mapping:{inference:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"inference",default:"inference"},model_response:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."}},additionalProperties:!1,required:["turn_id","step_id","step_type","model_response"],title:"InferenceStep",description:"An inference step in an agent turn."},tool_execution:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"tool_execution",default:"tool_execution"},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"The tool calls to execute."},tool_responses:{type:"array",items:{type:"object",properties:{call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}],description:"Name of the tool that was invoked"},content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The response content from the tool"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"(Optional) Additional metadata about the tool response"}},additionalProperties:!1,required:["call_id","tool_name","content"],title:"ToolResponse",description:"Response from a tool invocation."},description:"The tool responses from the tool calls."}},additionalProperties:!1,required:["turn_id","step_id","step_type","tool_calls","tool_responses"],title:"ToolExecutionStep",description:"A tool execution step in an agent turn."},shield_call:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"shield_call",default:"shield_call"},violation:{description:"The violation from the shield call.",type:"object",properties:{violation_level:{description:"Severity level of the violation",type:"string",enum:["info","warn","error"],title:"ViolationLevel"},user_message:{type:"string",description:"(Optional) Message to convey to the user about the violation"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"Additional metadata including specific violation codes for debugging and telemetry"}},additionalProperties:!1,required:["violation_level","metadata"],title:"SafetyViolation"}},additionalProperties:!1,required:["turn_id","step_id","step_type"],title:"ShieldCallStep",description:"A shield call step in an agent turn."},memory_retrieval:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"memory_retrieval",default:"memory_retrieval"},vector_db_ids:{type:"string",description:"The IDs of the vector databases to retrieve context from."},inserted_context:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The context retrieved from the vector databases."}},additionalProperties:!1,required:["turn_id","step_id","step_type","vector_db_ids","inserted_context"],title:"MemoryRetrievalStep",description:"A memory retrieval step in an agent turn."}}},description:"Complete details of the executed step"}},additionalProperties:!1,required:["event_type","step_type","step_id","step_details"],title:"AgentTurnResponseStepCompletePayload",description:"Payload for step completion events in agent turn responses."},turn_start:{type:"object",properties:{event_type:{type:"string",enum:["step_start","step_complete","step_progress","turn_start","turn_complete","turn_awaiting_input"],const:"turn_start",default:"turn_start",description:"Type of event being reported"},turn_id:{type:"string",description:"Unique identifier for the turn within a session"}},additionalProperties:!1,required:["event_type","turn_id"],title:"AgentTurnResponseTurnStartPayload",description:"Payload for turn start events in agent turn responses."},turn_complete:{type:"object",properties:{event_type:{type:"string",enum:["step_start","step_complete","step_progress","turn_start","turn_complete","turn_awaiting_input"],const:"turn_complete",default:"turn_complete",description:"Type of event being reported"},turn:{type:"object",properties:{turn_id:{type:"string",description:"Unique identifier for the turn within a session"},session_id:{type:"string",description:"Unique identifier for the conversation session"},input_messages:{type:"array",items:{oneOf:[{type:"object",properties:{role:{type:"string",const:"user",default:"user",description:'Must be "user" to identify this as a user message'},content:{description:"The content of the message, which can include text and other media",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},context:{description:"(Optional) This field is used internally by Llama Stack to pass RAG context. This field may be removed in the API in the future.",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"}},additionalProperties:!1,required:["role","content"],title:"UserMessage",description:"A message from the user in a chat conversation."},{type:"object",properties:{role:{type:"string",const:"tool",default:"tool",description:'Must be "tool" to identify this as a tool response'},call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},content:{description:"The response content from the tool",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"}},additionalProperties:!1,required:["role","call_id","content"],title:"ToolResponseMessage",description:"A message representing the result of a tool invocation."}]},description:"List of messages that initiated this turn"},steps:{type:"array",items:{oneOf:[{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"inference",default:"inference"},model_response:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."}},additionalProperties:!1,required:["turn_id","step_id","step_type","model_response"],title:"InferenceStep",description:"An inference step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"tool_execution",default:"tool_execution"},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"The tool calls to execute."},tool_responses:{type:"array",items:{type:"object",properties:{call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}],description:"Name of the tool that was invoked"},content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The response content from the tool"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"(Optional) Additional metadata about the tool response"}},additionalProperties:!1,required:["call_id","tool_name","content"],title:"ToolResponse",description:"Response from a tool invocation."},description:"The tool responses from the tool calls."}},additionalProperties:!1,required:["turn_id","step_id","step_type","tool_calls","tool_responses"],title:"ToolExecutionStep",description:"A tool execution step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"shield_call",default:"shield_call"},violation:{description:"The violation from the shield call.",type:"object",properties:{violation_level:{description:"Severity level of the violation",type:"string",enum:["info","warn","error"],title:"ViolationLevel"},user_message:{type:"string",description:"(Optional) Message to convey to the user about the violation"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"Additional metadata including specific violation codes for debugging and telemetry"}},additionalProperties:!1,required:["violation_level","metadata"],title:"SafetyViolation"}},additionalProperties:!1,required:["turn_id","step_id","step_type"],title:"ShieldCallStep",description:"A shield call step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"memory_retrieval",default:"memory_retrieval"},vector_db_ids:{type:"string",description:"The IDs of the vector databases to retrieve context from."},inserted_context:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The context retrieved from the vector databases."}},additionalProperties:!1,required:["turn_id","step_id","step_type","vector_db_ids","inserted_context"],title:"MemoryRetrievalStep",description:"A memory retrieval step in an agent turn."}],discriminator:{propertyName:"step_type",mapping:{inference:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"inference",default:"inference"},model_response:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."}},additionalProperties:!1,required:["turn_id","step_id","step_type","model_response"],title:"InferenceStep",description:"An inference step in an agent turn."},tool_execution:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"tool_execution",default:"tool_execution"},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"The tool calls to execute."},tool_responses:{type:"array",items:{type:"object",properties:{call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}],description:"Name of the tool that was invoked"},content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The response content from the tool"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"(Optional) Additional metadata about the tool response"}},additionalProperties:!1,required:["call_id","tool_name","content"],title:"ToolResponse",description:"Response from a tool invocation."},description:"The tool responses from the tool calls."}},additionalProperties:!1,required:["turn_id","step_id","step_type","tool_calls","tool_responses"],title:"ToolExecutionStep",description:"A tool execution step in an agent turn."},shield_call:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"shield_call",default:"shield_call"},violation:{description:"The violation from the shield call.",type:"object",properties:{violation_level:{description:"Severity level of the violation",type:"string",enum:["info","warn","error"],title:"ViolationLevel"},user_message:{type:"string",description:"(Optional) Message to convey to the user about the violation"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"Additional metadata including specific violation codes for debugging and telemetry"}},additionalProperties:!1,required:["violation_level","metadata"],title:"SafetyViolation"}},additionalProperties:!1,required:["turn_id","step_id","step_type"],title:"ShieldCallStep",description:"A shield call step in an agent turn."},memory_retrieval:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"memory_retrieval",default:"memory_retrieval"},vector_db_ids:{type:"string",description:"The IDs of the vector databases to retrieve context from."},inserted_context:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The context retrieved from the vector databases."}},additionalProperties:!1,required:["turn_id","step_id","step_type","vector_db_ids","inserted_context"],title:"MemoryRetrievalStep",description:"A memory retrieval step in an agent turn."}}}},description:"Ordered list of processing steps executed during this turn"},output_message:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."},output_attachments:{type:"array",items:{type:"object",properties:{content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}},{type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL",description:"A URL reference to external content."}],description:"The content of the attachment."},mime_type:{type:"string",description:"The MIME type of the attachment."}},additionalProperties:!1,required:["content","mime_type"],title:"Attachment",description:"An attachment to an agent turn."},description:"(Optional) Files or media attached to the agent's response"},started_at:{type:"string",format:"date-time",description:"Timestamp when the turn began"},completed_at:{type:"string",format:"date-time",description:"(Optional) Timestamp when the turn finished, if completed"}},additionalProperties:!1,required:["turn_id","session_id","input_messages","steps","output_message","started_at"],title:"Turn",description:"A single turn in an interaction with an Agentic System."}},additionalProperties:!1,required:["event_type","turn"],title:"AgentTurnResponseTurnCompletePayload",description:"Payload for turn completion events in agent turn responses."},turn_awaiting_input:{type:"object",properties:{event_type:{type:"string",enum:["step_start","step_complete","step_progress","turn_start","turn_complete","turn_awaiting_input"],const:"turn_awaiting_input",default:"turn_awaiting_input",description:"Type of event being reported"},turn:{type:"object",properties:{turn_id:{type:"string",description:"Unique identifier for the turn within a session"},session_id:{type:"string",description:"Unique identifier for the conversation session"},input_messages:{type:"array",items:{oneOf:[{type:"object",properties:{role:{type:"string",const:"user",default:"user",description:'Must be "user" to identify this as a user message'},content:{description:"The content of the message, which can include text and other media",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},context:{description:"(Optional) This field is used internally by Llama Stack to pass RAG context. This field may be removed in the API in the future.",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"}},additionalProperties:!1,required:["role","content"],title:"UserMessage",description:"A message from the user in a chat conversation."},{type:"object",properties:{role:{type:"string",const:"tool",default:"tool",description:'Must be "tool" to identify this as a tool response'},call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},content:{description:"The response content from the tool",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"}},additionalProperties:!1,required:["role","call_id","content"],title:"ToolResponseMessage",description:"A message representing the result of a tool invocation."}]},description:"List of messages that initiated this turn"},steps:{type:"array",items:{oneOf:[{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"inference",default:"inference"},model_response:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."}},additionalProperties:!1,required:["turn_id","step_id","step_type","model_response"],title:"InferenceStep",description:"An inference step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"tool_execution",default:"tool_execution"},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"The tool calls to execute."},tool_responses:{type:"array",items:{type:"object",properties:{call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}],description:"Name of the tool that was invoked"},content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The response content from the tool"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"(Optional) Additional metadata about the tool response"}},additionalProperties:!1,required:["call_id","tool_name","content"],title:"ToolResponse",description:"Response from a tool invocation."},description:"The tool responses from the tool calls."}},additionalProperties:!1,required:["turn_id","step_id","step_type","tool_calls","tool_responses"],title:"ToolExecutionStep",description:"A tool execution step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"shield_call",default:"shield_call"},violation:{description:"The violation from the shield call.",type:"object",properties:{violation_level:{description:"Severity level of the violation",type:"string",enum:["info","warn","error"],title:"ViolationLevel"},user_message:{type:"string",description:"(Optional) Message to convey to the user about the violation"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"Additional metadata including specific violation codes for debugging and telemetry"}},additionalProperties:!1,required:["violation_level","metadata"],title:"SafetyViolation"}},additionalProperties:!1,required:["turn_id","step_id","step_type"],title:"ShieldCallStep",description:"A shield call step in an agent turn."},{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"memory_retrieval",default:"memory_retrieval"},vector_db_ids:{type:"string",description:"The IDs of the vector databases to retrieve context from."},inserted_context:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The context retrieved from the vector databases."}},additionalProperties:!1,required:["turn_id","step_id","step_type","vector_db_ids","inserted_context"],title:"MemoryRetrievalStep",description:"A memory retrieval step in an agent turn."}],discriminator:{propertyName:"step_type",mapping:{inference:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"inference",default:"inference"},model_response:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."}},additionalProperties:!1,required:["turn_id","step_id","step_type","model_response"],title:"InferenceStep",description:"An inference step in an agent turn."},tool_execution:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"tool_execution",default:"tool_execution"},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"The tool calls to execute."},tool_responses:{type:"array",items:{type:"object",properties:{call_id:{type:"string",description:"Unique identifier for the tool call this response is for"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}],description:"Name of the tool that was invoked"},content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The response content from the tool"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"(Optional) Additional metadata about the tool response"}},additionalProperties:!1,required:["call_id","tool_name","content"],title:"ToolResponse",description:"Response from a tool invocation."},description:"The tool responses from the tool calls."}},additionalProperties:!1,required:["turn_id","step_id","step_type","tool_calls","tool_responses"],title:"ToolExecutionStep",description:"A tool execution step in an agent turn."},shield_call:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"shield_call",default:"shield_call"},violation:{description:"The violation from the shield call.",type:"object",properties:{violation_level:{description:"Severity level of the violation",type:"string",enum:["info","warn","error"],title:"ViolationLevel"},user_message:{type:"string",description:"(Optional) Message to convey to the user about the violation"},metadata:{type:"object",additionalProperties:{oneOf:[{type:"null"},{type:"boolean"},{type:"number"},{type:"string"},{type:"array"},{type:"object"}]},description:"Additional metadata including specific violation codes for debugging and telemetry"}},additionalProperties:!1,required:["violation_level","metadata"],title:"SafetyViolation"}},additionalProperties:!1,required:["turn_id","step_id","step_type"],title:"ShieldCallStep",description:"A shield call step in an agent turn."},memory_retrieval:{type:"object",properties:{turn_id:{type:"string",description:"The ID of the turn."},step_id:{type:"string",description:"The ID of the step."},started_at:{type:"string",format:"date-time",description:"The time the step started."},completed_at:{type:"string",format:"date-time",description:"The time the step completed."},step_type:{type:"string",enum:["inference","tool_execution","shield_call","memory_retrieval"],title:"StepType",description:"Type of the step in an agent turn.",const:"memory_retrieval",default:"memory_retrieval"},vector_db_ids:{type:"string",description:"The IDs of the vector databases to retrieve context from."},inserted_context:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent",description:"The context retrieved from the vector databases."}},additionalProperties:!1,required:["turn_id","step_id","step_type","vector_db_ids","inserted_context"],title:"MemoryRetrievalStep",description:"A memory retrieval step in an agent turn."}}}},description:"Ordered list of processing steps executed during this turn"},output_message:{type:"object",properties:{role:{type:"string",const:"assistant",default:"assistant",description:'Must be "assistant" to identify this as the model\'s response'},content:{description:"The content of the model's response",oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}}],title:"InterleavedContent"},stop_reason:{type:"string",enum:["end_of_turn","end_of_message","out_of_tokens"],description:"Reason why the model stopped generating. Options are: - `StopReason.end_of_turn`: The model finished generating the entire response. - `StopReason.end_of_message`: The model finished generating but generated a partial response -- usually, a tool call. The user may call the tool and continue the conversation with the tool's response. - `StopReason.out_of_tokens`: The model ran out of token budget."},tool_calls:{type:"array",items:{type:"object",properties:{call_id:{type:"string"},tool_name:{oneOf:[{type:"string",enum:["brave_search","wolfram_alpha","photogen","code_interpreter"],title:"BuiltinTool"},{type:"string"}]},arguments:{oneOf:[{type:"string"},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"},{type:"array",items:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}},{type:"object",additionalProperties:{oneOf:[{type:"string"},{type:"integer"},{type:"number"},{type:"boolean"},{type:"null"}]}}]}}]},arguments_json:{type:"string"}},additionalProperties:!1,required:["call_id","tool_name","arguments"],title:"ToolCall"},description:"List of tool calls. Each tool call is a ToolCall object."}},additionalProperties:!1,required:["role","content","stop_reason"],title:"CompletionMessage",description:"A message containing the model's (assistant) response in a chat conversation."},output_attachments:{type:"array",items:{type:"object",properties:{content:{oneOf:[{type:"string"},{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"},{type:"array",items:{oneOf:[{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}],discriminator:{propertyName:"type",mapping:{image:{type:"object",properties:{type:{type:"string",const:"image",default:"image",description:'Discriminator type of the content item. Always "image"'},image:{type:"object",properties:{url:{description:"A URL of the image or data URL in the format of data:image/{type};base64,{data}. Note that URL could have length limits.",type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL"},data:{type:"string",contentEncoding:"base64",description:"base64 encoded image data as string"}},additionalProperties:!1,description:"Image as a base64 encoded string or an URL"}},additionalProperties:!1,required:["type","image"],title:"ImageContentItem",description:"A image content item"},text:{type:"object",properties:{type:{type:"string",const:"text",default:"text",description:'Discriminator type of the content item. Always "text"'},text:{type:"string",description:"Text content"}},additionalProperties:!1,required:["type","text"],title:"TextContentItem",description:"A text content item"}}},title:"InterleavedContentItem"}},{type:"object",properties:{uri:{type:"string",description:"The URL string pointing to the resource"}},additionalProperties:!1,required:["uri"],title:"URL",description:"A URL reference to external content."}],description:"The content of the attachment."},mime_type:{type:"string",description:"The MIME type of the attachment."}},additionalProperties:!1,required:["content","mime_type"],title:"Attachment",description:"An attachment to an agent turn."},description:"(Optional) Files or media attached to the agent's response"},started_at:{type:"string",format:"date-time",description:"Timestamp when the turn began"},completed_at:{type:"string",format:"date-time",description:"(Optional) Timestamp when the turn finished, if completed"}},additionalProperties:!1,required:["turn_id","session_id","input_messages","steps","output_message","started_at"],title:"Turn",description:"A single turn in an interaction with an Agentic System."}},additionalProperties:!1,required:["event_type","turn"],title:"AgentTurnResponseTurnAwaitingInputPayload",description:"Payload for turn awaiting input events in agent turn responses."}}},title:"AgentTurnResponseEventPayload"}},additionalProperties:!1,required:["payload"],title:"AgentTurnResponseEvent"}},additionalProperties:!1,required:["event"],title:"AgentTurnResponseStreamChunk",description:"Streamed agent turn completion response."}}}},400:{description:"The request was invalid or malformed",content:{"application/json":{schema:{type:"object",properties:{status:{type:"integer",description:"HTTP status code"},title:{type:"string",description:"Error title, a short summary of the error which is invariant for an error type"},detail:{type:"string",description:"Error detail, a longer human-readable description of the error"},instance:{type:"string",description:"(Optional) A URL which can be used to retrieve more information about the specific occurrence of the error"}},additionalProperties:!1,required:["status","title","detail"],title:"Error",description:"Error response from the API. Roughly follows RFC 7807."},example:{status:400,title:"Bad Request",detail:"The request was invalid or malformed"}}}},429:{description:"The client has sent too many requests in a given amount of time",content:{"application/json":{schema:{type:"object",properties:{status:{type:"integer",description:"HTTP status code"},title:{type:"string",description:"Error title, a short summary of the error which is invariant for an error type"},detail:{type:"string",description:"Error detail, a longer human-readable description of the error"},instance:{type:"string",description:"(Optional) A URL which can be used to retrieve more information about the specific occurrence of the error"}},additionalProperties:!1,required:["status","title","detail"],title:"Error",description:"Error response from the API. Roughly follows RFC 7807."},example:{status:429,title:"Too Many Requests",detail:"You have exceeded the rate limit. Please try again later."}}}},500:{description:"The server encountered an unexpected error",content:{"application/json":{schema:{type:"object",properties:{status:{type:"integer",description:"HTTP status code"},title:{type:"string",description:"Error title, a short summary of the error which is invariant for an error type"},detail:{type:"string",description:"Error detail, a longer human-readable description of the error"},instance:{type:"string",description:"(Optional) A URL which can be used to retrieve more information about the specific occurrence of the error"}},additionalProperties:!1,required:["status","title","detail"],title:"Error",description:"Error response from the API. Roughly follows RFC 7807."},example:{status:500,title:"Internal Server Error",detail:"An unexpected error occurred. Our team has been notified."}}}},default:{description:"An unexpected error occurred",content:{"application/json":{schema:{type:"object",properties:{status:{type:"integer",description:"HTTP status code"},title:{type:"string",description:"Error title, a short summary of the error which is invariant for an error type"},detail:{type:"string",description:"Error detail, a longer human-readable description of the error"},instance:{type:"string",description:"(Optional) A URL which can be used to retrieve more information about the specific occurrence of the error"}},additionalProperties:!1,required:["status","title","detail"],title:"Error",description:"Error response from the API. Roughly follows RFC 7807."},example:{status:0,title:"Error",detail:"An unexpected error occurred"}}}}}})]})}function A(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(x,{...t})}):x(t)}}}]);