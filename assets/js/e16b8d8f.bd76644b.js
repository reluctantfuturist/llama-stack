"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[932],{72736:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"providers/inference/remote_passthrough","title":"remote::passthrough","description":"Passthrough inference provider for connecting to any external inference service not directly supported","source":"@site/docs/providers/inference/remote_passthrough.mdx","sourceDirName":"providers/inference","slug":"/providers/inference/remote_passthrough","permalink":"/llama-stack/docs/providers/inference/remote_passthrough","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-llama/llama-stack/tree/main/docs/docs/providers/inference/remote_passthrough.mdx","tags":[],"version":"current","sidebarPosition":18,"frontMatter":{"description":"Passthrough inference provider for connecting to any external inference service not directly supported","sidebar_label":"Passthrough","sidebar_position":18,"title":"remote::passthrough"},"sidebar":"tutorialSidebar","previous":{"title":"Openai","permalink":"/llama-stack/docs/providers/inference/remote_openai"},"next":{"title":"Runpod","permalink":"/llama-stack/docs/providers/inference/remote_runpod"}}');var s=t(74848),i=t(28453);const o={description:"Passthrough inference provider for connecting to any external inference service not directly supported",sidebar_label:"Passthrough",sidebar_position:18,title:"remote::passthrough"},d="remote::passthrough",c={},a=[{value:"Description",id:"description",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Sample Configuration",id:"sample-configuration",level:2}];function h(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"remotepassthrough",children:"remote::passthrough"})}),"\n",(0,s.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(r.p,{children:"Passthrough inference provider for connecting to any external inference service not directly supported."}),"\n",(0,s.jsx)(r.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Field"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Required"}),(0,s.jsx)(r.th,{children:"Default"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"url"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"<class 'str'>"})}),(0,s.jsx)(r.td,{children:"No"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"The URL for the passthrough endpoint"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"api_key"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"pydantic.types.SecretStr | None"})}),(0,s.jsx)(r.td,{children:"No"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{children:"API Key for the passthrouth endpoint"})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"sample-configuration",children:"Sample Configuration"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-yaml",children:"url: ${env.PASSTHROUGH_URL}\napi_key: ${env.PASSTHROUGH_API_KEY}\n"})})]})}function l(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);